(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    421422,       8600]
NotebookOptionsPosition[    414685,       8376]
NotebookOutlinePosition[    415064,       8393]
CellTagsIndexPosition[    415021,       8390]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Configuration Space Analysis", "Title",
 CellChangeTimes->{3.524205562525219*^9}],

Cell["\<\
Basing on parallel parametrization\
\>", "Text",
 CellChangeTimes->{3.5242055690103617`*^9}],

Cell[CellGroupData[{

Cell["General Functions", "Section",
 CellChangeTimes->{
  3.524205581602379*^9, {3.526365546697055*^9, 3.5263655477371492`*^9}}],

Cell[CellGroupData[{

Cell["Get Element", "Subsection",
 CellChangeTimes->{3.524205590004941*^9}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "getElement", "]"}], "\n", 
 RowBox[{
  RowBox[{"getElement", "[", 
   RowBox[{"array_", ",", " ", "i_"}], "]"}], " ", ":=", " ", 
  RowBox[{"array", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
       RowBox[{"Length", "[", "array", "]"}]}], "]"}], " ", "+", " ", "1"}], 
    "]"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524205601349207*^9, 3.524205603138104*^9}}],

Cell[CellGroupData[{

Cell["Testing:", "Subsubsection",
 CellChangeTimes->{3.52420562559628*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], "\n", 
 RowBox[{"getElement", "[", 
  RowBox[{"a", ",", "0"}], "]"}], "\n", 
 RowBox[{"Clear", "[", "a", "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.5242056394847116`*^9, 3.524205655818873*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.524205660538151*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Trigonometric Inverse functions\
\>", "Subsection",
 CellChangeTimes->{{3.524205673843692*^9, 3.524205684116053*^9}}],

Cell[CellGroupData[{

Cell["ArcSine", "Subsubsection",
 CellChangeTimes->{3.524205692408968*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"getAnglesASin", ",", "aSin"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"getAnglesASin", "[", 
   RowBox[{"x_", ",", " ", 
    RowBox[{"interval", ":", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"start_", ",", " ", "end_"}], "}"}], ":", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"2", "*", "Pi"}]}], "}"}]}]}]}], "]"}], " ", ":=", " ", "\n", 
  "  ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "y", "}"}], ",", " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Reduce", "[", 
           RowBox[{"#1", ",", " ", "y"}], "]"}], " ", "&"}], " ", ")"}], " ", 
        "/@", " ", "\n", "      ", 
        RowBox[{"LogicalExpand", "[", 
         RowBox[{"Reduce", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Reduce", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "y", "]"}], " ", "==", " ", "x"}], ",", 
              " ", "y"}], "]"}], " ", "&&", " ", "\n", "         ", 
            RowBox[{"Inequality", "[", 
             RowBox[{
             "start", ",", " ", "LessEqual", ",", " ", "y", ",", " ", "Less", 
              ",", " ", "end"}], "]"}]}], ",", " ", "y"}], "]"}], "]"}]}], 
       ",", " ", "\n", "     ", 
       RowBox[{
        RowBox[{"y", " ", "==", " ", 
         RowBox[{
          RowBox[{"(", "yrhs_", ")"}], "?", "NumericQ"}]}], " ", ":>", " ", 
        "yrhs"}], ",", " ", 
       RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"aSin", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "tmp", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{"getAnglesASin", "[", "x", "]"}]}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "tmp", "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Pi", "/", "2"}], ",", 
           RowBox[{"Pi", "/", "2"}]}], "}"}]}], ";"}]}], "]"}], ";", "\n", 
     RowBox[{"Return", "[", "tmp", "]"}], ";"}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524205732775543*^9, 3.524205732777124*^9}, {
  3.5242057741046953`*^9, 3.524205811325025*^9}, {3.524210534881961*^9, 
  3.524210541158656*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["ArcCos", "Subsubsection",
 CellChangeTimes->{3.524210847798706*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"getAnglesACos", ",", "aCos"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getAnglesACos", "[", 
    RowBox[{"x_", ",", " ", 
     RowBox[{"interval", ":", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"start_", ",", " ", "end_"}], "}"}], ":", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}]}]}]}], "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "y", "}"}], ",", " ", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Reduce", "[", 
            RowBox[{"#1", ",", " ", "y"}], "]"}], " ", "&"}], " ", ")"}], " ",
          "/@", "\[IndentingNewLine]", 
         RowBox[{"LogicalExpand", "[", 
          RowBox[{"Reduce", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Reduce", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "y", "]"}], " ", "==", " ", "x"}], ",", 
               " ", "y"}], "]"}], " ", "&&", "\[IndentingNewLine]", 
             RowBox[{"Inequality", "[", 
              RowBox[{
              "start", ",", " ", "LessEqual", ",", " ", "y", ",", " ", "Less",
                ",", " ", "end"}], "]"}]}], ",", " ", "y"}], "]"}], "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"y", " ", "==", " ", 
          RowBox[{
           RowBox[{"(", "yrhs_", ")"}], "?", "NumericQ"}]}], " ", ":>", " ", 
         "yrhs"}], ",", " ", 
        RowBox[{"{", "2", "}"}]}], "]"}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"aCos", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{"getAnglesACos", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "tmp", "]"}], "==", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "tmp", "]"}], ";"}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524210865851598*^9, 3.5242108658533363`*^9}, {
  3.524211221131475*^9, 3.5242112505866127`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Tests", "Subsubsection",
 CellChangeTimes->{{3.5242108730633497`*^9, 3.524210873660564*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"aCos", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5242108803729486`*^9, 3.524210880374683*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF1P8v1HEcwPFDpohoIeXI1wm1UKfI3hIthXGIJp3TUvMldcu3bEJaV9NY
aZNotUNUu4uU4XhzspNppfP9OBwndzofknyZptpefT4/PPf4D55WscnMi5o0
Gi3wb//cj0xUGxsE/m/yqg13dY3yzVsX+8UlSleHwNjpWQK7ge5GecPdAwQ+
DHpPLnQ9FhD4GMi88+mVG4vAwWDa57ykSy1zOBXs7dVTtbHVWALSW5N3uJt/
x+bgu4QP2ttGVbgOjMl3mR/KVeJocOVBJhejGVKegcyseGKatPSUC0dyV4HL
wNxEdvpe/ymcA2ZqvUzjqOX4BsjO/mzbXzWBY8FHzYri0vhx0sYxh62vrWVY
CNoYevuEPZVie7DWkRsvnxzEAnCso2YPg9GPR0GF8yNX/F6Cx0GjrGrGfo0e
bAw6MwjnisVuvA+85av+0pAuxrmgcRi/8KypCJuCtb86tnXaNuJSsEKquK/M
4+PnYHSIeZ30QhEOABt0M/tEKQ+REjwk17DIiRSgKNBmvmnVQ9SAnEB/3tCn
oEgRCgX9ArdrLb0TI1+wgDWQfaC+GxWB4iC6fvD2HtQFqq2Ms76WSJAKTLnu
xC4w6Uep4MCIITOucxANgTEZR7/pBEgRC2x3cr/Xri1DItB+i3Cm/OQ4sgPp
wgQ/be4EKW1Ns5ojl5MuhzSf77CbIpUeZO22y1OgYfBqhKGR9cg0qVnRVOQm
+gzaCfKjnr1YTFeSRnjdPNnZrEJnwJrzSdYe67OkK7rHtRrC1aTMHk8GvXgO
hYK6nnptwjLKtvLh0+d4c6gVPJCewX7CpzSwrM8366D8mOg6afyD0nvz3kKD
AIJ05drKLn4IgZZBgVRcERhBaSGIa8qPJZAluB5ePq2bQaDfYD3P0kunkvKK
PiGufEWgZNA+rYV5ooay6FT05dtCSs5CyUMtCaVjVLwFb5By4sORah8ZgcbB
4OLBlhwl5WbNKn8rgkA6IE5I6239SaBWMLXvBCtmjRK+RfoHgtKUFw==
     "]], 
    LineBox[CompressedData["
1:eJxF1P0vFHAcwHGR0RXRoqRTHrLICun0ZB89GeoqF6NVOJWah9SVkPWspdKy
sKTHdVTS7kIyj18OOzWthCMn3HEX6u6rPHSs9TSf7n547/UfvG0j4jgH9fX0
9Nh/++dysBz6/ZuS/8ZN2KdOTOp8UezmODKm030pO0L5hZKVqKd5SmdTOyWr
Ue++b29uCynZgHIuvy1YGUZJAJrwLiX2ULVaa2vrzKFarkorsyZurufCr1pL
ousNZ38a0hqe5jb88cIgCUU1N5NTCQyQcZRv2m2VLVOSXPSuvxuv5YqCPEAv
xHATnfz6yUU02eBZAk8lJ6dQ7rl3DpKnMnIAzapSZN+N6iW30PKepbOe23UT
gtqbeW8MvC8lzmiRc2qUvK+DlKM9DYWLWSwJUfzXJcudvGoh/aj5mXzW8mnN
xAp1YVGXvJEmwkIvbla9L0sUk2uoRaAgffc8EZmPFo03zG50KCen0Typ4vpg
ioDUo/sCFr6U7s8kuzhTljGS20TxGfAIXSWfZnM+RAga2ZT2wxUTa0VlwED9
+B/fbg8RQRS6hT3HYKxEDB7ojbD2c66lTcBHxduZJjvnNIMEVdlanPmQ0wJK
NP7EMu4NSwnw0PYuM05kYwc0o+FJ6z8bbZMCG61b5nm1zrAbRKjjjMqBXN9e
cECZldFbDFNlWvUm9fN5crnWHwFVoQ1L+mEUlXqEWS9JUYAEPRpsZm7XpYRY
1CqzP2Q6cwCsUcGeh09GEgdBiAZ7nfVtrBqCQLQwNNZu7c8vUIxqGJsMyoJU
MI5ymtexmNlqCEQZ62bWVt5Twwy0Nrdz616+GgjqmpjEvSNQwwrUdFFpmlWD
GkzQ1zHufRbf1dCIehs7pZtuo1o1xzQLBAEUfqBCqTiPHUxBgNoIIyvSIigw
0Z9BuUpGEoVfaCl/kZfRYwol6BETKn5cQCEOdUyo5vgU6sz033f4UqVO3rec
DIMWCsdR5z1RNvwOCk6orH5N/sZuCr3ozuyO6vODFHagxvpP/WwpBSOURCe0
1oxSqEFPtvmEhU/qxG9p/QMIYJSH
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 1}, {-0.9999999591836735, 0.9999999591836735}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.524210887478407*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"aSin", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.524210951519557*^9, 3.524210951521551*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF1Pkv13EcwHFHRl+3RVO+5JxrzVFfRfaWYgjjO0UTX1+tYyRlzmxCWmqK
hU2i2b7OtC+SzPl2ZF81Jrl9y/HlK0dfH0KOaar18v788NzjP3jqh0ayr8lI
SUl5/e2fx5HW4t4ehfeN3DZM396hra61NlnboLUx9QqdW6KwLWinnjbeM0Lh
U6DTzOqnF1UUPguyH/VW2nIo7AvG9aVF3GhdxrHg4KDiYjtXgodAZlvkITud
H1gHrAv/IKf6bRHXgiEZ1itjqQuYA249T0zHaB6vgzyVCe286TlcBBZ4WEcN
PBbjQjD1FjfezH0WJ4GJsq/joiQifA/kJvcZDZdP42Awt0WcVxA2RWycNFV6
YzCBm0BDNSdnv1dCrAu+NU8PE82M4jJwsqvmGIs1jKdAsWWuDX4/gCdB9aQK
1nHpfqwEWrIoy5K1HmwBPjgv+dwQL8DJoKYfP+vy4Q6sDL791aXabdSIBWCJ
UPx0IY2PA8AgX513wqs5ONHnvw2MxKGOmGy070mRtG5KQBXRcKVp276jgejO
G+v1DuggunhpyG7UCYiZnJFkq/oe9AwUeDOVfTT6iRJ9zaQv+QPEmGgLbqbW
MIoGR76qsa93jxJDEs58l/cUIg7YaWH3pFNugmhysHm+2G0KGYPM5nAXufRp
otSOTEWUSETc9G0J7jKeJQpPcI4ap4nROHjHX03d4OscUTtnNuAAcx4dBvmB
RWVr8QtEf8f7bt0ti+gSWBMcYWC/u4SqwS3GOdmGixIiu9+BxcxbRn4gw0Gx
vbmQtr14/MIV3jJqA63iE7gv+bQqevUZ2l20H2/ZzGj+pHVSMMtS8aSIW3e3
jvB9KbQJVgkFJV7+tLpV15syQimkB+5eLJ5jJFDoN1jP03OUL6W9rUwJSisp
FAmaxLWyXWtoczyCbj5spo1azc+WHaA1DwzT5Y3STn84XeE8QaEp0CdvtDVl
gVZBptxdn6KQPIjD4wbb1inUBsYOuXJCdmjhW8Q/1m2Thg==
     "]], 
    LineBox[CompressedData["
1:eJxF1P8v1HEcwPHLZaTypUUj5zsrrKE6pfSWvozCciNa+XJCDXVl6ZhN4lpX
U1lpXfqytnNKtTuUDMebi07FJDpfThfHXU7dfZTomNaX7dXn88Nzj//g6ZrC
YaWZ0Gi0yL/9cwOym/r9m8D/5cy78+cXKKuf+XvNzFIGrItM0X4h8EYw0IY3
3DVA4C1gyPi3N7clBN4Jsi52P9mYRMnt4Z041mIg7e9fPtXG1mMFyGjlrA50
/Epal9luavVxijS5xH96qEiHj4DG6/l8jCbxIii0VNkLxrRYBN7d55/dd0lD
WpTFzl0fPoGLwXz6Y262Xo0LQXZhj4fi0RhOBW82awR3M0bxLbDx07oVT91U
uBZ0tw4JjbmvxI5grTc/Qz0+iJvATx01LkymAg+AGt+bAfhFH6lNQRVzw5Je
bA/6Mglf0UwX3gIW79a/a8iV4yugbYy49NAaGXYAa+c6rDo9GrEMFCk1V3Q8
Me4GE6IdnyuPluE0sMEi/4Ms5wZaADerlzidj5egVNB9umk+SNaAaGC4cKg7
Kl6GYsE9kavos3VytAO8ljRQ6Fffha6C8ijGygOretFbUO9qW/C+vA/NgDln
fNjX7BSICw6MWLPSOweRAkzO2/7ZLEJJ+tIn8PJLUxV6BXotk05WhI2SMqSZ
e0z5Y8gZpC2YVGWr1YgO/oxuTuzwnEBzoHJT0lpPnob0VJy1jduIltS+bCJ+
KWMSOYDiww8ezuTqSOOCz4V1Nk+hg2BN4gm3oMUvqBo0WuyiN8TqSVm925gM
gQHFgBbblrdJ71G2VQzvPyI0oFbQLzePfUdMaelcX2LfYUBW4OusgHHb75Qh
5utLLSMIUuNpo4M4mkA/QYlSLoqMI1A16CRJbypJIZALuBhbobXII9AvsF7o
HGxWSXlyJSGvfEIgDujFbWHtraEs25dw/IKUMvtb+Q16H6X34Qwn4SDlWPvW
qlAVgUbBA4LBlvM6SnOTR+GuBIHMQJzJ7W/9QaBW8OyHvUnJC5TwLdI/R+CU
qw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 1}, {-0.9999999591836735, 0.9999999591836735}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.524210958097125*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equality Test", "Subsection",
 CellChangeTimes->{{3.524211011307452*^9, 3.5242110137756977`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isEqual", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"x", "-", "y"}], "]"}], ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "6"}], ")"}]}]}], "]"}], "==", "0"}], ",", "\n", 
    RowBox[{"Return", "[", "True", "]"}], ",", "\n", 
    RowBox[{"Return", "[", "False", "]"}]}], "\n", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5242110155743303`*^9, 3.524211015576229*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Robot-Obstacle", "Section",
 CellChangeTimes->{3.524211044210589*^9}],

Cell[CellGroupData[{

Cell["Robot", "Subsection",
 CellChangeTimes->{{3.524211047551063*^9, 3.524211048142774*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setRob", "[", 
   RowBox[{"r_", ",", "alpha_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"j", ",", "tmpAngle"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"robR", ",", "Protected"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"robA", ",", "Protected"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", 
      RowBox[{"robA", ",", "robR"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"robR", "=", "r"}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Robot", "'"}], "s", " ", "Radii"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"robA", "=", "alpha"}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Robot", "'"}], "s", " ", "Angles"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"robA", ",", "Protected"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"robR", ",", "Protected"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"robDelta", ",", "Protected"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "robDelta", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"robDelta", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "robA", "]"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", " ", 
       RowBox[{"j", "<", 
        RowBox[{
         RowBox[{"Length", "[", "robR", "]"}], "+", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"v1", "=", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{
            RowBox[{"j", "-", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}], "-", 
          RowBox[{"a", "[", 
           RowBox[{"j", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v2", "=", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{
            RowBox[{"j", "+", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}], "-", 
          RowBox[{"a", "[", 
           RowBox[{"j", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmpAngle", "=", 
         RowBox[{"getAnglesACos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Norm", "[", "v1", "]"}], " ", 
               RowBox[{"Norm", "[", "v2", "]"}]}], ")"}]}], ")"}], 
           RowBox[{"Dot", "[", 
            RowBox[{"v1", ",", "v2"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Clear", "[", 
         RowBox[{"v1", ",", "v2"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"tmpAngle", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", "Pi"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"robDelta", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"tmpAngle", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"robDelta", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"tmpAngle", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"robDelta", ",", "Protected"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setRob", "::", "usage"}], "=", 
   "\"\<setRob[r,\[Alpha]] defines a robot with radii vector r and angles \
vector \[Alpha]\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524211062329568*^9, 3.524211062332427*^9}, {
  3.524211469201396*^9, 3.5242114741828423`*^9}, {3.524394292100768*^9, 
  3.524394311670203*^9}, {3.524451476980735*^9, 3.5244514944179153`*^9}, {
  3.5244523918764343`*^9, 3.52445240079368*^9}, {3.5244524578211727`*^9, 
  3.524452480516562*^9}, {3.524452861646817*^9, 3.524452985252039*^9}, {
  3.5244532096389008`*^9, 3.524453246915975*^9}}],

Cell[CellGroupData[{

Cell["Fundamental Transformation", "Subsubsection",
 CellChangeTimes->{3.5242114083215523`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAttributes", "[", 
   RowBox[{"a", ",", "Protected"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "a", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"i_", ",", "r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"r", "+", 
    RowBox[{
     RowBox[{"getElement", "[", 
      RowBox[{"robR", ",", "i"}], "]"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", 
         RowBox[{"getElement", "[", 
          RowBox[{"robA", ",", "i"}], "]"}]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", 
         RowBox[{"getElement", "[", 
          RowBox[{"robA", ",", "i"}], "]"}]}], "]"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "::", "usage"}], "=", 
   "\"\<a[i,r,\[Theta]] is the position of Subscript[a, i], in (r,\[Theta]) \
configuration\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"a", ",", "Protected"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5242113986178837`*^9, 3.5242113986201878`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normals", "Subsubsection",
 CellChangeTimes->{{3.524212876090002*^9, 3.524212885391762*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAttributes", "[", 
   RowBox[{"robN", ",", "Protected"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "robN", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"robN", "[", 
   RowBox[{"i_", ",", "r_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}], ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", "r", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "r", ",", "\[Theta]"}], "]"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"robN", "::", "usage"}], "=", 
   "\"\<a[i,r,\[Theta]] is the normal to the i-th edge in (r,\[Theta]) \
configuration\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"robN", ",", "Protected"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524212896102585*^9, 3.5242129054800787`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Boundary Vertex", "Subsubsection",
 CellChangeTimes->{3.52421292352526*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAttributes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ait", ",", "rit", ",", "alphait"}], "}"}], ",", "Protected"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"ait", ",", "rit", ",", "alphait"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ait", "[", 
    RowBox[{"i_", ",", "t_", ",", "r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], 
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "r", ",", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"t", " ", 
     RowBox[{"a", "[", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", "r", ",", "\[Theta]"}], "]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ait", "::", "usage"}], "=", 
   "\"\<ait[i,t,r,\[Theta]] returns the position of ai,t in the (r,\[Theta]) \
configuration\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rit", "[", 
    RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Norm", "[", 
    RowBox[{"ait", "[", 
     RowBox[{"i", ",", "t", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rit", "::", "usage"}], "=", 
   "\"\<rit[i,t] returns the radius of Subscript[a, i,t]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alphait", "[", 
    RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tmp", ",", "Ai", ",", "res"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", "Condition", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{
           RowBox[{"ait", "[", 
            RowBox[{"i", ",", "t", ",", "0", ",", "0"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "==", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Then", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tmp", "=", 
          RowBox[{"Pi", "/", "2"}]}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tmp", "=", 
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ait", "[", 
              RowBox[{"i", ",", "t", ",", "0", ",", "0"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{
             RowBox[{"ait", "[", 
              RowBox[{"i", ",", "t", ",", "0", ",", "0"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ai", "=", 
       RowBox[{"N", "[", 
        RowBox[{"getElement", "[", 
         RowBox[{"robA", ",", "i"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"tmp", "<", "Ai"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tmp", "=", 
          RowBox[{"tmp", "+", "Pi"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", "tmp"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alphait", "::", "usage"}], "=", 
   "\"\<alphait[i,t] returns the angle of Subscript[a, i,t]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ait", ",", "rit", ",", "alphait"}], "}"}], ",", "Protected"}], 
   "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5242129514140882`*^9, 3.524213031753291*^9}, 
   3.524215013464603*^9, {3.524215061056488*^9, 3.524215061695148*^9}, {
   3.5299913288735456`*^9, 3.5299913631368093`*^9}, {3.529991429165885*^9, 
   3.529991433121566*^9}, {3.5299914853362083`*^9, 3.529991507303096*^9}, {
   3.52999170732683*^9, 3.529991758095189*^9}, {3.529992049034688*^9, 
   3.529992067749601*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"plotRob", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Point", "[", 
       RowBox[{"ait", "[", 
        RowBox[{"0", ",", "t", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}], "]"}], "]"}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Subsubsection",
 CellChangeTimes->{{3.524215015787136*^9, 3.52421502007367*^9}, {
  3.5242150752720118`*^9, 3.524215076238234*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "plotRob", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotRob", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"i", ",", "r", ",", "\[Theta]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "robR", "]"}]}], "}"}]}], "]"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"i", ",", "r", ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "robR", "]"}]}], "}"}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x_", ",", "y_"}], "}"}], ":>", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "}"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"i", ",", "r", ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "robR", "]"}]}], "}"}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x_", ",", "y_"}], "}"}], ":>", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"i", ",", "r", ",", "\[Theta]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "[", "robR", "]"}]}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
             RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Point", "[", 
       RowBox[{"{", "r", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotRob", "::", "usage"}], "=", 
   "\"\<plotRob[r,\[Theta]] plots the robot in the (r,\[Theta]) configuration\
\>\""}], ";"}], "\n"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524215089497369*^9, 3.5242151547990522`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"plotRob", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", "t"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", 
           RowBox[{"-", "8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}]}], "}"}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5242151658260117`*^9, 3.524215165830976*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 
    0, $CellContext`x$$ = -4, $CellContext`y$$ = -4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], -4, 4}, {
      Hold[$CellContext`y$$], -4, 4}, {
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {177., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$106527$$ = 
    0, $CellContext`y$106528$$ = 0, $CellContext`t$106529$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`t$$ = 
        0, $CellContext`x$$ = -4, $CellContext`y$$ = -4}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$106527$$, 0], 
        Hold[$CellContext`y$$, $CellContext`y$106528$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$106529$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`plotRob[{$CellContext`x$$, $CellContext`y$$}, \
$CellContext`t$$], 
        Graphics[
         Point[{{-8, -8}, {8, 8}}]]], 
      "Specifications" :> {{$CellContext`x$$, -4, 4}, {$CellContext`y$$, -4, 
         4}, {$CellContext`t$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {247., 253.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.524215171858139*^9, 3.524451521179865*^9, 3.52445248828165*^9, 
   3.5244530852269363`*^9, {3.5244531721936483`*^9, 3.524453199052534*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(plotRob[\\(\\(\\(\\({\\(\\(-4\\)\\), \
\\(\\(-4\\)\\)}\\)\\), 0\\)\\)]\\)\\), \\*GraphicsBox[PointBox[List[List[-8, \
-8], List[8, 8]]]]\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5262739763411207`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Obstacle", "Subsection",
 CellChangeTimes->{{3.524215198855522*^9, 3.524215204255405*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setObst", "[", "vec_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"j", ",", "tmpAngle"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"b", ",", "Protected"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "b", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", "vec"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"b", ",", "Protected"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"obstGamma", ",", "Protected"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "obstGamma", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"obstGamma", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "b", "]"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", " ", 
       RowBox[{"j", "<", 
        RowBox[{
         RowBox[{"Length", "[", "b", "]"}], "+", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"v1", "=", 
         RowBox[{
          RowBox[{"getElement", "[", 
           RowBox[{"b", ",", 
            RowBox[{"j", "-", "1"}]}], "]"}], "-", 
          RowBox[{"getElement", "[", 
           RowBox[{"b", ",", "j"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"v2", "=", 
         RowBox[{
          RowBox[{"getElement", "[", 
           RowBox[{"b", ",", 
            RowBox[{"j", "+", "1"}]}], "]"}], "-", 
          RowBox[{"getElement", "[", 
           RowBox[{"b", ",", "j"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmpAngle", "=", 
         RowBox[{"getAnglesACos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Norm", "[", "v1", "]"}], " ", 
               RowBox[{"Norm", "[", "v2", "]"}]}], ")"}]}], ")"}], 
           RowBox[{"Dot", "[", 
            RowBox[{"v1", ",", "v2"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Clear", "[", 
         RowBox[{"v1", ",", "v2"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"tmpAngle", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", "Pi"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"obstGamma", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"tmpAngle", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"obstGamma", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"tmpAngle", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"obstGamma", ",", "Protected"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plotObst", "=", 
      RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Polygon", "[", "b", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"b", "/.", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x_", ",", "y_"}], "}"}], ":>", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "}"}]}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"b", "/.", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x_", ",", "y_"}], "}"}], ":>", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", "Brown"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], ";"}]}],
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setObst", "::", "usage"}], "=", 
   "\"\<setObst[v] sets an obstacle with vertices vector v, computes inner \
angles and its plot\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5242152203274937`*^9, 3.5242152219549847`*^9}, {
  3.5243943284674664`*^9, 3.524394356791727*^9}, {3.524451543650635*^9, 
  3.5244515798276463`*^9}, {3.524451615274794*^9, 3.524451622514168*^9}, {
  3.524453270342366*^9, 3.524453343258525*^9}, {3.5244535807736807`*^9, 
  3.524453655767538*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting the Work Space", "Subsection",
 CellChangeTimes->{{3.524215321658803*^9, 3.524215327722446*^9}}],

Cell[BoxData[{
 RowBox[{"setRob", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", 
      RowBox[{"Pi", "/", "3"}]}], ",", 
     RowBox[{"6", 
      RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"setObst", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "4"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.524453395466338*^9, 3.524453396621027*^9}, {
  3.524453451196632*^9, 3.524453470683839*^9}, {3.5244535047372828`*^9, 
  3.524453542070467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", 
           RowBox[{"-", "8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
     RowBox[{"plotRob", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", "\[Theta]"}], "]"}], ",", 
     "plotObst"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.524215336405201*^9, 3.524215336406996*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0, $CellContext`y$$ = 
    0, $CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`x$$], 0}, -10, 10}, {{
       Hold[$CellContext`y$$], 0}, -10, 10}, {{
       Hold[$CellContext`\[Theta]$$], 0}, 0, 2 Pi}}, Typeset`size$$ = {
    360., {177., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$109173$$ = 
    0, $CellContext`y$109174$$ = 0, $CellContext`\[Theta]$109175$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`x$$ = 0, $CellContext`y$$ = 
        0, $CellContext`\[Theta]$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$109173$$, 0], 
        Hold[$CellContext`y$$, $CellContext`y$109174$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$109175$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[
         Point[{{0, 0}, {-8, -8}, {8, 8}}]], 
        $CellContext`plotRob[{$CellContext`x$$, $CellContext`y$$}, \
$CellContext`\[Theta]$$], $CellContext`plotObst], 
      "Specifications" :> {{{$CellContext`x$$, 0}, -10, 
         10}, {{$CellContext`y$$, 0}, -10, 10}, {{$CellContext`\[Theta]$$, 0},
          0, 2 Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {247., 253.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.524215339143126*^9, 3.5242163799142857`*^9, 3.5242169543263817`*^9, 
   3.524394398041892*^9, 3.524451633199258*^9, 3.5244527397826633`*^9, 
   3.524453367676298*^9, 3.524453474564464*^9, {3.52445350805378*^9, 
   3.524453514770445*^9}, {3.524453544997291*^9, 3.524453548462749*^9}, 
   3.524453591212202*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[0, 0], List[-8, \
-8], List[8, 8]]]], \\*GraphicsBox[List[List[RGBColor[0, 1, 0], \
Opacity[0.3`], PolygonBox[List[]]], List[List[]], List[List[]], \
PointBox[List[List[0, 0]]]]], plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5262740879702673`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rotating About Boundary Vertex", "Section",
 CellChangeTimes->{3.524215359380772*^9}],

Cell[CellGroupData[{

Cell["Parametrization", "Subsection",
 CellChangeTimes->{3.524215365239574*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"qITr", "[", 
    RowBox[{"i_", ",", "t_", ",", "P_", ",", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"P", "+", 
    RowBox[{
     RowBox[{"rit", "[", 
      RowBox[{"i", ",", "t"}], "]"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"alphait", "[", 
          RowBox[{"i", ",", "t"}], "]"}], "+", "Pi"}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"alphait", "[", 
          RowBox[{"i", ",", "t"}], "]"}], "+", "Pi"}], "]"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qITr", "::", "usage"}], "=", 
   "\"\<qITr[i,t,P,\[Phi]] is the vector component of the \
parametrization\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qITa", "[", 
    RowBox[{"i_", ",", "t_", ",", "\[Phi]_"}], "]"}], ":=", "\[Phi]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qITa", "::", "usage"}], "=", 
   "\"\<qITa[i,t,\[Phi]] is the angular component of the \
parametrization\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5242153728337717`*^9, 3.52421537958783*^9}}],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.5242153920816507`*^9, 3.524215403546074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotRob", "[", 
      RowBox[{
       RowBox[{"qITr", "[", 
        RowBox[{"i", ",", "t", ",", "P", ",", "\[Phi]"}], "]"}], ",", 
       RowBox[{"qITa", "[", 
        RowBox[{"i", ",", "t", ",", "\[Phi]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"ait", "[", 
          RowBox[{"i", ",", "t", ",", 
           RowBox[{"qITr", "[", 
            RowBox[{"i", ",", "t", ",", "P", ",", "\[Phi]"}], "]"}], ",", 
           RowBox[{"qITa", "[", 
            RowBox[{"i", ",", "t", ",", "\[Phi]"}], "]"}]}], "]"}], "]"}]}], 
       "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"plotRob", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "\n", "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.52421540469919*^9, 3.524215416989203*^9}, {
  3.524216420159753*^9, 3.5242164451985826`*^9}, {3.524216986912613*^9, 
  3.524216998387682*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.386, $CellContext`\[Phi]$$ = 
    2.701769682087222, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Phi]$$], 0, 2 Pi}, {
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {452., {111., 13.25}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Phi]$6957$$ = 0, $CellContext`t$6958$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`t$$ = 0, $CellContext`\[Phi]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Phi]$$, $CellContext`\[Phi]$6957$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$6958$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`plotRob[
         $CellContext`qITr[$CellContext`i, $CellContext`t$$, $CellContext`P, \
$CellContext`\[Phi]$$], 
         $CellContext`qITa[$CellContext`i, $CellContext`t$$, $CellContext`\
\[Phi]$$]], 
        Graphics[{Red, 
          Point[
           $CellContext`ait[$CellContext`i, $CellContext`t$$, 
            $CellContext`qITr[$CellContext`i, $CellContext`t$$, \
$CellContext`P, $CellContext`\[Phi]$$], 
            $CellContext`qITa[$CellContext`i, $CellContext`t$$, $CellContext`\
\[Phi]$$]]]}], 
        Graphics[
         Point[{{-5, -5}, {5, 5}}]], 
        $CellContext`plotRob[{0, 0}, 0]], 
      "Specifications" :> {{$CellContext`\[Phi]$$, 0, 2 
         Pi}, {$CellContext`t$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{495., {116., 122.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.52421542964323*^9, {3.524216421940475*^9, 3.5242164471316566`*^9}, {
   3.524216979272532*^9, 3.524216999085102*^9}, 3.526274785400407*^9, 
   3.526274864280858*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(i, 0.386`, P, \
2.701769682087222`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(i, 0.386`, \
2.701769682087222`\\)\\)]\\)\\)\\)\\)]\\)\\), \\*GraphicsBox[List[RGBColor[1, \
0, 0], PointBox[ait[i, 0.386`, qITr[i, 0.386`, P, 2.701769682087222`], \
qITa[i, 0.386`, 2.701769682087222`]]]]], \
\\*GraphicsBox[PointBox[List[List[-5, -5], List[5, 5]]]], \
\\(\\(plotRob[\\(\\(\\(\\({0, 0}\\)\\), 0\\)\\)]\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526285633106367*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(i, 0.386`, P, \
2.701769682087222`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(i, 0.386`, \
2.701769682087222`\\)\\)]\\)\\)\\)\\)]\\)\\), \\*GraphicsBox[List[RGBColor[1, \
0, 0], PointBox[ait[i, 0.386`, qITr[i, 0.386`, P, 2.701769682087222`], \
qITa[i, 0.386`, 2.701769682087222`]]]]], \
\\*GraphicsBox[PointBox[List[List[-5, -5], List[5, 5]]]], \
\\(\\(plotRob[\\(\\(\\(\\({0, 0}\\)\\), 0\\)\\)]\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5263655396548862`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1 + \\(\\(Mod[\\(\\(\\(\
\\(\\(\\(-1\\)\\) + i\\)\\), 4\\)\\)]\\)\\)\\)\[NoBreak] is neither an \
integer nor a list of integers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/pspec\\\", ButtonNote -> \
\\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.529128883287017*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1 + \\(\\(Mod[\\(\\(\\(\
\\(\\(\\(-1\\)\\) + i\\)\\), 4\\)\\)]\\)\\)\\)\[NoBreak] is neither an \
integer nor a list of integers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/pspec\\\", ButtonNote -> \
\\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.529128883343536*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1 + \\(\\(Mod[\\(\\(\\(\
\\(\\(\\(-1\\)\\) + i\\)\\), 4\\)\\)]\\)\\)\\)\[NoBreak] is neither an \
integer nor a list of integers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/pspec\\\", ButtonNote -> \
\\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.529128883347843*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.529128883351922*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(i, 0.386`, P, \
2.701769682087222`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(i, 0.386`, \
2.701769682087222`\\)\\)]\\)\\)\\)\\)]\\)\\), \\*GraphicsBox[List[RGBColor[1, \
0, 0], PointBox[ait[i, 0.386`, qITr[i, 0.386`, P, 2.701769682087222`], \
qITa[i, 0.386`, 2.701769682087222`]]]]], \
\\*GraphicsBox[PointBox[List[List[-5, -5], List[5, 5]]]], \
\\(\\(plotRob[\\(\\(\\(\\({0, 0}\\)\\), 0\\)\\)]\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.529991036730226*^9}]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Vertex-Edge Contact", "Section",
 CellChangeTimes->{3.5242155310847473`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "min"], " "}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "range"], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.52421554750686*^9, 3.52421558989218*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"veContact", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "M", ",", "v", ",", "res", ",", "x", ",", "y", ",", "phi12", ",", 
      "phi34", ",", "phiRange", ",", "phiMin"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", 
              RowBox[{"i", "+", "1"}]}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", "i"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", "i"}], "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", "i"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", "i"}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", 
              RowBox[{"i", "+", "1"}]}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", 
              RowBox[{"i", "+", "1"}]}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", "i"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", "i"}], "]"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", 
              RowBox[{"i", "+", "1"}]}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", "i"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", "i"}], "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}], "-", 
           RowBox[{"a", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}]}], "]"}], "/", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"getElement", "[", 
            RowBox[{"b", ",", 
             RowBox[{"j", "+", "1"}]}], "]"}], "-", 
           RowBox[{"getElement", "[", 
            RowBox[{"b", ",", "j"}], "]"}]}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"getElement", "[", 
          RowBox[{"b", ",", 
           RowBox[{"j", "+", "1"}]}], "]"}], "-", 
         RowBox[{"getElement", "[", 
          RowBox[{"b", ",", "j"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Inverse", "[", "M", "]"}], ".", "v"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phi12", "=", 
      RowBox[{"N", "[", 
       RowBox[{"aCos", "[", "x", "]"}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "The", " ", "expressions", " ", "are", " ", "evaluated", " ", "to", " ",
        "avoid", " ", "problems", " ", "related", " ", "to", " ", "the", " ", 
       "symbolic", " ", "computation"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"phi34", "=", 
      RowBox[{"N", "[", 
       RowBox[{"aSin", "[", "y", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"isEqual", "[", 
         RowBox[{
          RowBox[{"phi12", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"phi34", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "||", 
        RowBox[{"isEqual", "[", 
         RowBox[{
          RowBox[{"phi12", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"phi34", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"phiMin", "=", 
        RowBox[{"phi12", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"isEqual", "[", 
           RowBox[{
            RowBox[{"phi12", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"phi34", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "||", 
          RowBox[{"isEqual", "[", 
           RowBox[{
            RowBox[{"phi12", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"phi34", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"phiMin", "=", 
          RowBox[{"phi12", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error in evContact - problem with Subscript[\[Phi], min] \
values\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiMin", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{"phiMin", ",", 
        RowBox[{"2", "Pi"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiRange", "=", 
      RowBox[{"Pi", "-", 
       RowBox[{"getElement", "[", 
        RowBox[{"robDelta", ",", "i"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"0", "<=", "phiRange", "<=", "Pi"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Error in veContact - phiRange outside of bounds\>\"", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"phiMin", ",", "phiRange"}], "}"}], "]"}]}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"veContact", "::", "usage"}], "=", 
   "\"\<veContact[i,j]={phiMin,phiRange} of the Subscript[v, i]-Subscript[e, \
j] contact\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524215587290003*^9, 3.5242156510729713`*^9}, 
   3.524216776396565*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualization functions for V-E contact", "Subsection",
 CellChangeTimes->{3.52421566845442*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"patchVEContact", "[", 
   RowBox[{"i_", ",", "j_", ",", "col_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", ",", "phiMin", ",", "phiMax", ",", "thickness"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"thickness", "=", "0.005"}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"veContact", "[", 
       RowBox[{"i", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiMin", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiMax", "=", 
      RowBox[{"phiMin", "+", 
       RowBox[{"res", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"phiMax", "<=", 
        RowBox[{"2", "Pi"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Patch", " ", "is", " ", "connected"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{"(*", 
           RowBox[{"Plot", " ", "the", " ", "patch"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
               "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
               "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"RGBColor", "[", "col", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Plots", " ", "V"}], "-", 
            RowBox[{"V", " ", "contact", " ", "curve"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Blue"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"j", "+", "1"}]}], "]"}], ",", "phi"}], "]"}], "[", 
              
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"j", "+", "1"}]}], "]"}], ",", "phi"}], "]"}], "[", 
              
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Blue"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Plots", " ", "E"}], "-", 
            RowBox[{"E", " ", "contact", " ", "curve"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phiMin"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phiMin"}], 
               "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phiMin"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Yellow"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phiMax"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phiMax"}], 
               "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phiMax"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Yellow"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]",
         "]"}], 
       RowBox[{"(*", 
        RowBox[{
        "CASE", " ", "End", " ", "of", " ", "connected", " ", "patch"}], 
        "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Patch", " ", "is", " ", "disconnected"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "\[IndentingNewLine]", "[", 
        RowBox[{"(*", 
         RowBox[{"Plot", " ", 
          RowBox[{"patch", "'"}], "s", " ", "parts"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
               "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
               "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", 
             RowBox[{"2", "Pi"}]}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"RGBColor", "[", "col", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
               "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
               "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"phiMax", ",", 
               RowBox[{"2", "Pi"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"RGBColor", "[", "col", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Plots", " ", "V"}], "-", 
            RowBox[{"V", " ", "contact", " ", "curve"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", 
             RowBox[{"2", "Pi"}]}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Blue"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"j", "+", "1"}]}], "]"}], ",", "phi"}], "]"}], "[", 
              
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"j", "+", "1"}]}], "]"}], ",", "phi"}], "]"}], "[", 
              
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", 
             RowBox[{"2", "Pi"}]}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Blue"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"phiMax", ",", 
               RowBox[{"2", "Pi"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Blue"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"j", "+", "1"}]}], "]"}], ",", "phi"}], "]"}], "[", 
              
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"j", "+", "1"}]}], "]"}], ",", "phi"}], "]"}], "[", 
              
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"phiMax", ",", 
               RowBox[{"2", "Pi"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Blue"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Plots", " ", "E"}], "-", 
            RowBox[{"E", " ", "contact", " ", "curve"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phiMin"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phiMin"}], 
               "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phiMin"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Yellow"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Plots", " ", "E"}], "-", 
            RowBox[{"E", " ", "contact", " ", "curve"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", 
                RowBox[{"Mod", "[", 
                 RowBox[{"phiMax", ",", 
                  RowBox[{"2", "Pi"}]}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", "\[IndentingNewLine]", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t"}], ")"}], 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"getElement", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", 
                RowBox[{"Mod", "[", 
                 RowBox[{"phiMax", ",", 
                  RowBox[{"2", "Pi"}]}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{"Mod", "[", 
                RowBox[{"phiMax", ",", 
                 RowBox[{"2", "Pi"}]}], "]"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "thickness", "]"}], ",", "Yellow"}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]",
         "]"}]}], 
      RowBox[{"(*", 
       RowBox[{"End", " ", "of", " ", "disconnected", " ", "patch"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"END", " ", "of", " ", "IF", " ", "statement"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5242156978150377`*^9, 3.5242158074217176`*^9}, {
  3.527846407359022*^9, 3.527846477843832*^9}, {3.5278465289042797`*^9, 
  3.5278465303109922`*^9}, {3.527846585446784*^9, 3.527846611846939*^9}, {
  3.527846702051999*^9, 3.527846759699533*^9}, {3.527846879029449*^9, 
  3.527846932795479*^9}, {3.527847000499774*^9, 3.527847048531658*^9}, {
  3.527847104124859*^9, 3.527847161983971*^9}, {3.527847212687088*^9, 
  3.527847220691018*^9}, {3.527847263425355*^9, 3.527847274640505*^9}, {
  3.527847306059908*^9, 3.527847344909708*^9}, {3.527847391252334*^9, 
  3.527847464037368*^9}, {3.527847505696084*^9, 3.527847510478372*^9}, {
  3.5278495864886436`*^9, 3.527849596171467*^9}, {3.527914830057661*^9, 
  3.527914831271916*^9}, {3.527915281711341*^9, 3.527915378056774*^9}, {
  3.527916422911008*^9, 3.527916460046167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"showVEContact", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"res", "=", 
      RowBox[{"veContact", "[", 
       RowBox[{"i", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiMin", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiMax", "=", 
      RowBox[{"phiMin", "+", 
       RowBox[{"res", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Show", "\[IndentingNewLine]", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "6"}], ",", 
                 RowBox[{"-", "6"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "6"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"plotRob", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"qITr", "[", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "t"}], ")"}], 
                 RowBox[{"getElement", "[", 
                  RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                RowBox[{"t", " ", 
                 RowBox[{"getElement", "[", 
                  RowBox[{"b", ",", 
                   RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}], 
             ",", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           "plotObst"}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"patchVEContact", "[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0."}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{"Point", "[", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"qITr", "[", 
                 RowBox[{"i", ",", "0", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], 
                    RowBox[{"getElement", "[", 
                    RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                   RowBox[{"t", " ", 
                    RowBox[{"getElement", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
                 "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"qITr", "[", 
                 RowBox[{"i", ",", "0", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], 
                    RowBox[{"getElement", "[", 
                    RowBox[{"b", ",", "j"}], "]"}]}], "+", 
                   RowBox[{"t", " ", 
                    RowBox[{"getElement", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"j", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
                 "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"qITa", "[", 
                  RowBox[{"i", ",", "0", ",", "phi"}], "]"}], ",", 
                 RowBox[{"2", "Pi"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "phiMin", ",", "phiMax"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5242158199882193`*^9, 3.52421588350844*^9}, 
   3.52421676470006*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.5242159092700872`*^9, 3.524215909843261*^9}}],

Cell[BoxData[
 RowBox[{"showVEContact", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.524216852000204*^9, 3.524216862769786*^9}, 
   3.532435218793292*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"showVEContact", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.524215924174914*^9, 3.524215924176646*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        4.456893606736168, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 4.456893606736168, 5.742765806909002}}, 
        Typeset`size$$ = {385., {97., 101.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23293$$ = 0, $CellContext`phi$23294$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            4.456893606736168, $CellContext`t$$ = 0}, "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23293$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23294$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              1, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[1, 1, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[1, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             4.456893606736168, 5.742765806909002}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{428., {153., 159.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        5.242291770133616, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 5.242291770133616, 6.5281639703064505`}}, 
        Typeset`size$$ = {315., {106., 110.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23313$$ = 0, $CellContext`phi$23314$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            5.242291770133616, $CellContext`t$$ = 0}, "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23313$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23314$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              1, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[1, 2, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[1, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             5.242291770133616, 6.5281639703064505`}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{358., {162., 168.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        1.637051507543017, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 1.637051507543017, 2.922923707715851}}, 
        Typeset`size$$ = {325., {106., 110.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23333$$ = 0, $CellContext`phi$23334$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            1.637051507543017, $CellContext`t$$ = 0}, "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23333$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23334$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              1, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[1, 3, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 1, 
                  0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[1, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             1.637051507543017, 2.922923707715851}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{368., {162., 168.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        2.100699116543823, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 2.100699116543823, 4.456893606736168}}, 
        Typeset`size$$ = {385., {98., 103.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23353$$ = 0, $CellContext`phi$23354$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            2.100699116543823, $CellContext`t$$ = 0}, "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23353$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23354$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              2, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[2, 1, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[2, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             2.100699116543823, 4.456893606736168}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{428., {154., 160.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        2.8860972799412714`, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 2.8860972799412714`, 5.242291770133616}}, 
        Typeset`size$$ = {385., {96., 101.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23373$$ = 0, $CellContext`phi$23374$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            2.8860972799412714`, $CellContext`t$$ = 0}, "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23373$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23374$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              2, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[2, 2, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    
                    2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[2, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             2.8860972799412714`, 5.242291770133616}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{428., {152., 158.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        5.564042324530258, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 5.564042324530258, 7.920236814722603}}, 
        Typeset`size$$ = {385., {92., 97.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23393$$ = 0, $CellContext`phi$23394$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            5.564042324530258, $CellContext`t$$ = 0}, "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23393$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23394$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              2, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[2, 3, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 2, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[2, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             5.564042324530258, 7.920236814722603}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{428., {148., 154.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        5.742765806909002, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 5.742765806909002, 8.383884423723408}}, 
        Typeset`size$$ = {321., {106., 110.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23413$$ = 0, $CellContext`phi$23414$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            5.742765806909002, $CellContext`t$$ = 0}, "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23413$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23414$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              3, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[3, 1, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[3, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             5.742765806909002, 8.383884423723408}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{364., {162., 168.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        0.24497866312686378`, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 0.24497866312686378`, 2.886097279941271}},
         Typeset`size$$ = {385., {100., 105.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23433$$ = 0, $CellContext`phi$23434$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            0.24497866312686378`, $CellContext`t$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23433$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23434$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              3, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[3, 2, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    2] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 2 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[3, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             0.24497866312686378`, 2.886097279941271}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{428., {156., 162.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`phi$$ = 
        2.922923707715851, $CellContext`t$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1}, {
          Hold[$CellContext`phi$$], 2.922923707715851, 5.564042324530258}}, 
        Typeset`size$$ = {385., {94., 98.}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`t$23453$$ = 0, $CellContext`phi$23454$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, 
          "Variables" :> {$CellContext`phi$$ = 
            2.922923707715851, $CellContext`t$$ = 0}, "ControllerVariables" :> {
            Hold[$CellContext`t$$, $CellContext`t$23453$$, 0], 
            Hold[$CellContext`phi$$, $CellContext`phi$23454$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
            Show[
             Graphics[
              Point[{{-6, -6}, {6, 6}}]], 
             $CellContext`plotRob[
              $CellContext`qITr[
              3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 
              $CellContext`qITa[
              3, 0, $CellContext`phi$$]], $CellContext`plotObst], 
            Show[
             $CellContext`patchVEContact[3, 3, {1, 1, 0.}], 
             Graphics3D[
              Point[{
                Part[
                 $CellContext`qITr[
                 3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 1], 
                Part[
                 $CellContext`qITr[
                 3, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                    3] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 3 + 1], $CellContext`phi$$], 2], 
                Mod[
                 $CellContext`qITa[3, 0, $CellContext`phi$$], 2 Pi]}]]]}, 
          "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`phi$$, 
             2.922923707715851, 5.564042324530258}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{428., {150., 156.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.526275037285844*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(1, 0, \\(\\(getElement[\\(\\(b, 1\
\\)\\)]\\)\\), 4.456893606736168`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(1, 0, \
4.456893606736168`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5263655605420847`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(1, 1, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[1, 0, Mod[qITa[1, 0, \
4.456893606736168`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.52636556061696*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(1, 0, \\(\\(getElement[\\(\\(b, 2\
\\)\\)]\\)\\), 5.242291770133616`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(1, 0, \
5.242291770133616`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.52636556074572*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(1, 2, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[1, 0, Mod[qITa[1, 0, \
5.242291770133616`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5263655608173857`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(1, 0, \\(\\(getElement[\\(\\(b, 3\
\\)\\)]\\)\\), 1.637051507543017`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(1, 0, \
1.637051507543017`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365560930935*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(1, 3, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[1, 0, Mod[qITa[1, 0, \
1.637051507543017`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561017311*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(2, 0, \\(\\(getElement[\\(\\(b, 1\
\\)\\)]\\)\\), 2.100699116543823`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(2, 0, \
2.100699116543823`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561079455*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(2, 1, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[2, 0, Mod[qITa[2, 0, \
2.100699116543823`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561144411*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(2, 0, \\(\\(getElement[\\(\\(b, 2\
\\)\\)]\\)\\), 2.8860972799412714`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(2, 0, \
2.8860972799412714`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561230401*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(2, 2, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[2, 0, Mod[qITa[2, 0, \
2.8860972799412714`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561300457*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(2, 0, \\(\\(getElement[\\(\\(b, 3\
\\)\\)]\\)\\), 5.564042324530258`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(2, 0, \
5.564042324530258`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5263655613683023`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(2, 3, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[2, 0, Mod[qITa[2, 0, \
5.564042324530258`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561430504*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(3, 0, \\(\\(getElement[\\(\\(b, 1\
\\)\\)]\\)\\), 5.742765806909002`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(3, 0, \
5.742765806909002`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561572608*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(3, 1, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[3, 0, Mod[qITa[3, 0, \
5.742765806909002`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5263655616301413`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(3, 0, \\(\\(getElement[\\(\\(b, 2\
\\)\\)]\\)\\), 0.24497866312686378`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(3, 0, \
0.24497866312686378`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5263655617106543`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(3, 2, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[3, 0, Mod[qITa[3, 0, \
0.24497866312686378`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561783589*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[PointBox[List[List[-6, -6], List[6, \
6]]]], \\(\\(plotRob[\\(\\(\\(\\(qITr[\\(\\(3, 0, \\(\\(getElement[\\(\\(b, 3\
\\)\\)]\\)\\), 2.922923707715851`\\)\\)]\\)\\), \\(\\(qITa[\\(\\(3, 0, \
2.922923707715851`\\)\\)]\\)\\)\\)\\)]\\)\\), plotObst\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5263655618624897`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(patchVEContact[\\(\\(3, 3, \\(\\({1, 1, 0.`}\
\\)\\)\\)\\)]\\)\\), \\*Graphics3DBox[Point3DBox[List[3, 0, Mod[qITa[3, 0, \
2.922923707715851`], Times[2, Pi]]]]]\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.526365561924325*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"patchVEContact", "[", 
      RowBox[{"i", ",", "j", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.52421603201727*^9, 3.52421604216643*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
8OFhhTJ31MuXof3/P8jF2/k=
    "], {
     {RGBColor[
      0.6027757521844515, 0.10431306956862296`, 0.10467655915845309`], 
      EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
        
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJzt2G1IU1EYwPGhsopyRG+Iqc1mUpPKdEqt7KEYTUZhhBiuxFVmUkKQzCyS
ZKkpEYsk2abiitSiMCyTrOVNyzQiahq1RVLadkUQ00bL2pC8l3M+HmPjwhjd
D4c//Lg85zlfb+zhk/uOhggEgt+zJ3T2zLsZUvz0pYNChZk2xdudajvFO7f+
WrWgI9PtwIWqGyP20Qgb7xx7YdS5gUKpExdkqZFHEq5/4J1jT5kazq8+5MSF
SKVsuP3He9799NvrY48xjgreiY1fGF+of9w0aXTigqnMuncofJDogglzM+Oo
oJPeSp/re1/nBMp93Z/kZ6OXtTCOCtrzNQrGK9bVtN23OnFhplZc4na9451j
N1uuhD4S0rjQpVfpVme84R15Qm4e66iw64y20h8/Hm2yf0ylcWEs15lYlN3P
O3LPbi3rqKARR6T44/Xb5Gp3Lo0L8wvG8+RLnv933jOdxToqhJkearj0y78+
X1xbRuOC6NIGqXLxE6IXnGpnHRVKmoVbg8lJ7/rT3s86KvQYTElc+rQ6U/Hp
Go0LWqGCqk2+R/TkLWmso0JHWPdX3v/t3p/KjKlGGhdA5UlXq/S8c+wGqbFh
tIHGhVcWcVrT/kYIdq+rqmEdFSyrmnIC6dWipHybnqZQIapHltR5+kHQe+qB
ONZRYSB+jTyQLjEe1JYW0xQqvFhhWVpn7eKdY3d2j7R+G3JQqKDpjRnLemaj
uPI7whivrpzGBU+2a+WmxE4g+aRuEeuooCjvkzBO2t/X/5OkOaR77w5ae+MG
HBQq5OwYN3tEdorkVysyDIOlNC6c2L65cHmYBUhOmuPr/t2uenY+KsRfkOxh
5pPmtH4X9DH3okJlUbhxrv1J9/4FOfLJNA==
     "]], {
    GraphicsComplex3DBox[CompressedData["
1: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
XH3//wO/RWaV
     "], {
      {RGBColor[0.9692473859386275, 0.5305046095231605, 0.06674621835860028], 
       EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
         
         "]]]}, {}, {}, {}, {}},
     VertexNormals->CompressedData["
1:eJxTTMoPSmViYGD4CcTMQOxlmDvjauLb/QwQ0PBszu7zTlE394+KU1d8meMV
6SPTEeJs77ObfKNujIpTWVyWe6qy7CWEeP6KJWtPmF0fFaeyeORGxRcX+N/B
xYVrTTvy318dFaeyuEGcTepKf4S4hrCIpV3LlVFxKotfVc9o9pmAENc66i7U
9fXSqDiVxa85JR50uIAQ39ilM0nK5eKoOJXFpy1IPfWF9z1cXOqu7JTmR+dG
xaks7l7D6HHKHSHuNvXIhsd/T42KU1n8UH/jC+UahLjpm5yamfePjYpTWXyR
nIVk2UqEeFZOnnZE36FRcSqLT9mwpSHyHEK8ad8zhkqVPaPiVBbvj7p6au5L
hLhwRfyhuJebRsWpLM5c2C0Y/QshXvyy6ucuhsWj4lQWh3A/IMJ/1r2VJ/r8
9o2KU1d82zkFPoMaxLjHSxGbN5vv3dhPLXGX5Nl/pv5DxK/500vFc9gmkyyO
y/2kjk/iMgeXvV7nT168mYcwJ8V9c/ZU2Zs4xRuWzi5a+h9hzp2La3zFOJpx
iuM0n0T34zQfV/iQ6H5c9gIAeIgXiA==
      "]], 
    GraphicsComplex3DBox[CompressedData["
1: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
tzHd9GyMziZzyHMoEBrw7TT7/z/ppZzC
     "], {
      {RGBColor[0.9692473859386275, 0.5305046095231605, 0.06674621835860028], 
       EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
         
         "]]]}, {}, {}, {}, {}},
     VertexNormals->CompressedData["
1:eJxTTMoPSmViYGD4CcTMDDDwYT8DCgiwGxWnrrji3BX71v9/Dxe//E5LYOer
RvtRceqKr7OwV9r/DyF+avuv2JqXE0fFqSyeEZm9QO8vQvx4bF+Cxu1Zo+JU
Frf9++3Pv18I8VCHf8cnP1k4Kk5lceaeMx6GPxDiizl+n1WMXDYqTmXx6/2d
D499QYgHLSnesfjUqlFxKouL/NEvOPgBIX6M/VxCg8X6UXEqi4etaH2q9AYh
fvNotaLgxY2j4lQWF9zGV/P2GUKcvyrjYSXzllFxKovH7d61SfkhQjxlX26R
ofG2UXEqi9+KvOFz4hZC/JmE5bH38TtGxaks/n3WZt97lxHiX8QnT8/r3DUq
TmVx7ScaPzLOIMSnvNl5LGP9nlFxKov3JE07kX0EIb7kmGvu7Iv7RsWpLB7Q
wvX+NdL40tuGKYc5XhdSTTzjJ5ti9QmE+AdP88D/B/aSLI7L/VBVcHEIwD0+
icscXPZ+jtvx+xeSv5Qb7hrIvk7EKe6iKTav/BhC/ExBIGeu5z6c4rjMIdX9
uMzHZQ6p7sdlLwADCK+0
      "]]}, GraphicsComplex3DBox[CompressedData["
1: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
1HKp815p/v8HHgIF3Q==
    "], {
     {RGBColor[0.7914998163102578, 0.5264887662963644, 0.18236646998627415`], 
      EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
        
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJzt2HtIU1EcwPGRZpQ9lrEoKKykEjKwB1piHsmJMjNzhDGXPZyGLnvIStH6
Iyf5oFAjtDQqh9nDCnspvuo3CEuMNDFy3nvMpqG5Xa2U8hFi3p39eweDi+K2
Pw5f+HD4nR/3z7s+9ow0fp5AIBifPk7TJ7lu9Fl9iAGRUhDX2Nq2N7oT7M0r
xoNfsE5KwS6F6wc+fecfrXIo04BIKZjcdr27f5XO4Tz7RvdJZXujAZFSIEzN
OrpF88XhPPtAUp4619WISGkoT5rqfzX82e789LucTNZJadDLKvV8+onBtC69
1IhIaRjc1KzoWtLucJ79pMIlOLHYiEhpWJ4vV/8d+WR3ntwTLGadlIaU7PQc
Pn1S+/BAOjYiUhoeywPyNkR8tFl3CnMxOSkNQmFECeujPmGRrJPSEPpgq9rS
fWu9TFPcIlvNIFIMvxIEMSpZk826s15kclIM8/31CawHxa5tZZ0UA1XoHmnp
vrXuoWzqOxzOIFIMei/fVD+3tzbrkvcKk5NiKFrTo54JFw4fzFqZwiBSDDXH
noSHCOtt1o+cWmZyUgwNwstxM+EBlzIysq8xiBTD893fC2/sqLQ718laTU6K
4ay62Z/P+Su+DrdL7jCIFIO4tEosl+TPeV+gHDA5KYYrEs3v2fSLe4qGqm8x
iBSDZ5+4+t6hu2iuu89IpslJMZROvV5YPosu9aoIGMplzMXQLUwbq0l9icYe
SU1OimEzlb+u1oJzzXE48bqCc010ImMuhm/HRbik7Y3DefYJVUyHU7zBXAqq
Qq/2Rml1wOWBZbd1rJNS8NNNjy25qKXR5+YFBpFi2K7Z98PbuxZZ61z7W/uf
k2sO17u+Ix1yzyiDuRSoenPu/1vaCeHagmjWSSnwkwY+Zd1v8aLzHioGkWLQ
TATtFzk3IC7nmm/t/lzzub6PtftzvfsfL9Uo2Q==
     "]], 
   GraphicsComplex3DBox[CompressedData["
1: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
//8AoiEfYg==
    "], {
     {RGBColor[0.49872604211959204`, 0.410157778422376, 0.8719914700568432], 
      EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
        
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJzt2F1IU2EYwPHlAplCCX5kmtAstS8cKlZQ8UgmJPNCB2pE4rIkzXCZaQYJ
hoW4oFg5XOGMLrKJOJyBSeleTZAkilhmsTJ33IcF0QeC+NEsz3jO5WsdOTSM
c/Hyhx+H533e2yMv0qiKAyQSydzSkS6dyKGs6U45Q7CgehJcbZ5yEZrLzRM/
WMeCdGNRzWpyod7Fd85Ik/6OdobhChJrmbyxykn1uOJMI+tYeF1bvmm57/nO
8Zfz3Z/vu5jUhoW8xUmu8DjkVLjmJEP1lJGgRdaxsO/05/XLfc93jr+c7/49
Udt+so6F6AeBYazLzB2++VhokWjXsW74anr0Kt7FFTpLRt/3R4+LLrRr+5Ry
pZsraLP1DYfb3qx6f7h5ZxbrWDDsUlzxp8t0Cc/3Jnu4wsLb8/eZj89EF9ij
ciJSbEYPV8hoD2rMs90VXWDvJi3NijIPV+iyNB6qOjIIf+vd6E5Tps+xEJo8
k7OcXx775nMsqJJi9vjT+e7P910DF9XeLR1ugoUPSRvUMo2N6hXfzT7Hws3c
1ALR/+z1dQUZs3oXwcKNY8rbETq76AL7pZrtofpSJ8FC7dhE5cxZh+gC++4T
Q8o+1STBwjlz+4Frw5OQHpaQxToW4qKm9ou+cg/QJT99WcoQLPTUVahjNS7R
0QubqwdZx4LCYTm+Eu+4lWaZ73UQLIyp46z3rruhoNzgcyzkhRr7/wef7/3U
xToW8s2d1n/hF0YHIqXpDoKF1sgme0aaR3SBvb3iYGHsVYZgwf7OG5Ka5iJC
+Vx4Yqmx2sEVtpoU3vFpN9B87a/6EtaxED+cuMg6bX++/3Vpc2j3fmnbUdua
wxAsBFuzyyIMLkLzNZW5w7NHHVzhjCnwRVCMB2hOm0P7v0rbnzafNofv/rR7
fwNACH4o
     "]], GraphicsComplex3DBox[CompressedData["
1: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
WshMkHWW5ifu4cTO6xwf6fz/AbODgB4=
    "], {
     {RGBColor[0.6412922463550665, 0.9564630235343299, 0.8125837559004148], 
      EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
        
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJxTTMoPSmViYGD4CcTMQBx/7+sET6sX+xkgoGHmm/+V654/2T8qTl3xmgeW
1wLTX8LF6z/fkussfTwqTmXxKX88hJLvvIKLF2f/Y8tPeTgqTmXxJRwHlq2q
fwMX79lffHGv9N1RcSqL13z//Zhf9h1c/EdheovHsquj4lQWn3zpJd+D5Pdw
ccX6X20P750YFaey+JPSDmXuPwhxJ5P2K2GX5o+KU1nc+FewXf4WuDjDVuUJ
HqURB+1Hxakr3hKWlnl9Cbw8YTDrMYjjzL80Kk5l8Yc5mvfuyLyFi3/4PHWO
2MRbo+JUFhfwPPuPp+Q1XJzrYXD+t4IHo+JUFo/1OrBq80t4/4UhQuqndfex
R6PiVBafJKRxxGsBvD/OUJfCH6+U/2RUnMriqxWC+CyWPYeLn90oumdh39NR
cSqLS/BsS0j+/wwuvrZw1w1Xh2ej4lQWn1FzifvDMcQ43qFtZsKmDk/2U0vc
6dCjabEeiPh9EjX3593PT+1JFcflflLHJ3GZg8veaRzXpojWIcx5bnA7XWzG
k/24xIu5e7a4KiLMcVnDfIZL9pk9LnFc5pDqflzm4zKHVPfjshcAKqUlwg==

     "]], {GraphicsComplex3DBox[CompressedData["
1:eJxF2Gk4FW0YB/CzzTlz9mPJUlSECCUqpeiWJUvKUggpvFEiXoWiRZtCIYmi
N1RUiEqJKC0oKktpR5SSpZCdlvf05fZhvvyucz3znHv+M/O/RskzwH4jjUKh
jIoPuvhQ1bm8LfkwBdSLf3jvYVDAdqacQ6KxDCxpakxqkaeCo5TLFZEGFX11
tOi2Ri4VIv3v95+zoaFv0TdtCjKiwY1H6gbzg+joB9pCKaV1NGhTio94lMRA
Tz2eM4PwooPkruHKtSUE+jWjD+YrB+mw7JU7v/sDE72qS9I3+TADAnUqHfYw
SPTWU+bHWuQJSI/WThFpsNFHzcKuauQSUNOW2HLOhoMu7L/yIsiICb+NfqrN
D+Kiz0xvHSqpY4LWaS//R0k89KU2kyYTXixw6a8uWFvCR3caszBcOciCaBvd
sa4PAnT/i7s2JB8moenFiulLaaKJuf1+xXXspcBnCY0ragIKFL+MGNYOEc8t
hzMnbT8VpPzi+4t0qegHnI3sv0rTwKRyeJG1Ew09hQgKnnuRBv9OXx/RFE5H
v34981TYIjpkhFVWBqQz0KvXvy15+IQOtQ3afFoFgd7C43/guTPgz+yTDokd
TPSRYqA59jJAO+rnaTUBiS7y2a6atp+AdZ+8Wop02ejq0pcsvkozIcbwiZq1
Ewfd6P77LXMvMqEkWde/KZyL7rhVGBe2iAUdfacLAtJ56FunmFx/+IQFsiuo
Y9QKPnrk45CXPHcSlmdtgsQOAfqZ4OyRNb0kLKZsMpFiidBNmd5rgpypQL6N
DtNSpIDywY7UR9ky4FpwekdJJxUW6P24d9eYir5tw7NUxm4aeB9by7LzpqFH
86llNkI6JLbfs/kUTUc/d3vex6QMOpQbqycG5zPQb/tsIlr0GPAjNe4dq4FA
r5M+o65RKf7d0ND0lBEm+tf7tdZBzuLc27r7aCmS6JQAekBJJwER2RVX7hqz
0eUU9BMYu5mQx9AesPXmoM+u8r1pI2RBs3uiwadoLrp5yNk3SRks4BWPRwTn
89DdZzwf/6BHgoGU1yNWAx89pI6YplFJgq9/NT9lRIB+dPeiZUHObHj2SW5W
kkCE/uiIMjWrjAoDrm2XD82lQIyuPXh8kIHm+Y4qPXbiORZa98o6UtGHPkYt
X9hGA3tRwYLsMBo6P/6O774QOkT4Tt69JI2OrmrYd6yaZMDV8n0Pax4y0A07
Va5JpTKgeWoH2+Mrge6Q7Nzgpk2AYKetbT+Phb7F9OhwZhkBS17cSjo0l0Q/
0Fc2uceOCX7a05pkHdnoqWf7DRe2MSHlcOSM7DAO+jXrmR77QlhQ3fpt85I0
LnrViMvBapKEkcVrrtY85KG3ZsZelEolQS2pdGjDVz76qP2DajdtNjj2zjDs
5wnRhZShb5llbDDJrLj/QE6E7l7b65ajSoPoItPdKtYUGGi53TYmJQvBu1Qi
Bm7RoEgy92FhABX9mIbzeUMrOnz1k+JYJtLQL7yKqYxspIPMozDb90V09NID
ZR21WxlgrvQxyb+Jgd6g08+TpxKwPdyy6Q+Vid7ZpKbjeYKACy+vzkhQY6HT
YlwcclSZ8HyOnK+KNYk+eWFsyMAtJtCi914tDGCj636+f9rQigU6bV+GLBI5
6BYJg6WRjSzYYLTS8H0RF33DUo2W2q0kxJ66ecC/iYe+o9uNLk9lQ+kPheo/
VAF6/Ol4Nc8TbOhecVCUoCZEzzIvt8xR5UDsi2DNBFURukZc837DaBq4ZZld
HN5MgXVxM6ISLWQBlkhmRSrQIZpy5VtULBXducOsqjaPDrddpOcpFNDQA5J2
dssZM+DrjfCwvNd09MMmV4SeLxggJ/x0D34y0NN6W3RzNhJgvtmK9WI6E/3m
f9KOA8MEhDy8ZrPRjIX+zMpip2E0Ey4oyicObybRPw+Hn4lUYEFDaMS7qFg2
+q8L+WW1eSygPW+frlDAQZey//RRzpgEXa1VPnmvueiaf2SYni9I2BBZeAV+
8tBNcq00cjayIbZFceD5dAG669o9KwaG2XDX4JDBRjMh+r/M6wGG0RwItQq5
Nz5PhL5wS/ZhuW80aK+67dh5jAKVhke1Z++WhVVyzdkee+kwSUX5v13Xqeg+
FRI12RIMMNsT9Unwmoa+J8isr/88A7a96dXIGKejJ03bKW24gIDzus6BetMJ
9LynufqRjwmoP1pWWGHKRC/f2eJS68IEarvaL6fNLPRGNek9ct+YMMc41qTz
GIk+8GJ5hsdeFqxPHYzadZ2NztsXXp4tQcKxQbc6wWsOuvLs/Pb+8yTcWVUu
kzHORTd4/5FjuIANXZc11+lN56PbH5GZHfmYDfKME+crTAXovvOt7GpdOGDp
PtbhtFmIHvFx93a5bxwwbNSRGzQXodNnnbs0aiPO55V7pm2FFJjTPVD/6Jr4
fnz98smyFvHzgaUeE/Keiq57kN0TEyTOp2dcPUmho1vONZR8yRDns3RINlWF
ge7RHDh/arI4nzLu7tqWBPrOmAvOPhrifAZWXCjzZ6LHLXwTfrWECQ3VWl12
CSz0i5+5aaM24nyqJs5tKyTRyxKWPljWwgLdveOhIe/Z6K+XbvscEyTO51vP
uySFi/6tO4t8yWBDvF41I1WFh06kvNOcmizO57G51tqWfHTF5YJVPhoc6G4/
dbzMX4A+f8A46GoJBxSWUd7YJQjRrTOCT47acEGtRk8Y5CqaWOdC0Y60XLr4
/aZUUdVGgVMp60I8vsjCPLvu1K9GDFAxjOK6sWnoK35PK5tbz4DVyb1237Xp
6F45Dh/DvAjY3+d0KsKegR7ufJgoHyTgunVZs2QogX6CKFHnH2FCS6aaamYq
E/3y9e/WjpNZIKLEbtG/x0K/v145IC2XBUYug9eq2kj0tzzHhK9GJGy94Tbi
yuag9xVH3ZxbT8IZQbnRd20uOsvnzpswLzY83aR5KMKehz5Num/84SAbxh4k
PJEM5aPr31eZxj/CAXXFMYnMVAH6qq3Oyxwnc8E51MNZ/54QfeOUoxvTcrlQ
vumf2n+CROgbRm/w/vaBOwtYb8NlqUC1rJw8PlkOQrO+zvnbB7rit04TLKGh
xzkoOPztA1O6Xm5M30BHz6LYhvztA5Zmhrm6hxjod68cOP1d3Ad2pl34UX6Z
QH/lcqtUX9wHLo5yFznVMNG7WV0fIsR94LXDtr0dP1jojJtT6X/7AJH3riJc
lo2u4Gmv9rcPzCeX8QRLOOjzhJGWf/uAl+dl+/QNXHSr0mK/v33gRKnotO4h
Hrrn5m9x3+04cF9mx4fyy3z0MBmlAv02DvQEflB1qhGgJzxc/SoihAvTnpj7
dfwQol8KPDJaRfLgoqTT2zsxIvTa+evUFnsyIGHdF5M3K6ngOzy7LHGVHHz5
GG95cIAB927ZRPtuo6H/jiv3exZJQK/EzbqfyXT0SYYjcTLyTJjqpyAbV8pA
1+7ULFifw4SVlQfWKbUS6GbJ619dMmTBruld5wsIFrqr6YnRvloW5IbZd5rN
ItG39VUqLPYk4V1Dsc6blWz0mLNjSw8OkMCZoxTqu42Dft56ttezSDYsjDpy
52cyF714xCNSRp4Dmz710ONKeej1mScvr8/hQJKhk5VSKx+9w77q6SVDcT6T
78YXEEJ0KuVXT18tF8ZGErqUJ4nQZa/oSC325IFkVqXA7+KEr1m6172wiAGN
fenniqOp8CIz2Wv2QTnw676+748VAZwVZId1Pg394OkvFyyaCDDICpjT/IKO
nmo++fHxACZsorwODhxhoBf023S9o4rvfxejUpoiE/1J+j6BSqL4PXcjk3bS
mIXeanNzrr8aCUMCvuVMbxJ9dOzr6sIiElQ2b48rjmajS1xS2PHHig2rH75/
aZ3PQddYY5tq0cSG/YomCs0vuOhLaQfvHg/gwPXQbM/AER66U/6t1ndULrTU
S1ymKQrQA9y6GCqJXBBo7exJNBaiH2ZPU/dX48E0k94UKT0R+n+F9taFRTzQ
751x161iwpUvl9hQeQTMUi8/OFxNhSWrKeTjIjlY5NgTaHWWAOf9mk+iemjo
dvQZiSd0mHCkMUFCQZqBvumq463GB0woXDDmlLeQQI9YF/1OdQ0LvsR7nIV1
TPRTnLu/trazQLrrcdvzfSz0vFt904t2kmBqpqO5MYtEr/xH1ZTKY0NQWvK/
w9Vs9GaJtT5WZ9lwbvT3rageDvrQ3aPRJ3Q4UOfg/XuKNA+d53fvSuMDDlDy
npnmLeSjq8gP1Kmu4cJscn4MrBOgL6mcObC1nQtunmfqn+8Toq/e5ipbtJMH
5s3Uo7oOInTf6XEGVB4f3GPm54d/nnCVlqGCT64EyGi9OewtpEEmbXOuxzc5
WHxs1mut7wSYRi6tGdGjozsYuI8FRzBhe0uWdIwzA923/bhimSQLzhkIXBV3
E+j7EyuAzGTB88TgjPwMJnqK8aiXnT4JlJ7GduNKFvrV71qHU6pI0LE0nd3Q
SaI/Tt2Q/cmVDe7nc7Z7CznoLRaJz7S+i/vtL8mSET0u+sjgo97gCA6UOoVR
Y5x56ILz41Jlklzovta6XHE3H13Ndo4+mcmFyTzL2PwMAbrRL08XO30eWHhf
bTCuFKI7ZiftTqkSX7+WGL5vsAjdz6k6/ZMrH1YfK9MpYEmgP+U7np15SdzH
buRuf+NEA6lr9bbjSvLQdjvqfqCBeJ4C6RLfXXT0nz532oqfivvYpnDqr3QG
uuSkPhZ9vXieDz4uj6sg0Gc9UNFc0SfuY4pWsUqdTPRlAc4rTx4QzzP0WkOB
gER3Vjj6b/MkNmyol5tirsdGD6wqS5x5STxPzQiPN04c9CMh/bcCDThw91D7
Rd9dXPT0GTPfFz8V97EPK7//TOehF9a5/Kat54KCQeG8uAo+es3uWKUVfVyw
SlQMV+oUoH+Z9cD05AHxPEMftKxlidB/vx70aZ4knqfKEP386QmXPqQRM/MS
H/zqNWZ2a0qg//jHa64mQQXbqHl7elIocHDPCtVWVxnwjq1KY5ZSYGEjxTWL
nHDlOfTxVnEvva64XWJdiBA9j/jvKLOUhI2fHSY7METo2bJedhlPCJDka5hs
qaBB49r/9uSx5GGqcVXZrv0EjK0fnKasN+HvWmlTnBfx4bbtvC1+dSL0I3lx
o7T1fGgZizv56OPE/7rGNCFK6ygA3mrRj5Imvuu21n2sCRL3vXNjGxXnBwnR
ndt65qzoI8DdoyVZqXMiV95FZ3J37eeD+cyan/HyEnheo3ejpf9UUiB2z8J3
Maso0GmvW3p7pQyMh+nJwW4SmPdy4pfdEaL7VRpdoN0moKH76Jf9sTTYcehW
e4O0PKj77PjTFMgHNdmIGoXfIvSR71rbn2dQgHbprIUPc2J99dJ8WcKLBK36
P3lrSyb2Lzmq3F78lIDn0ebMX+kT+99qb2YReJIP/jQb2XxlCVx/y5SQUo1c
CtyIOzpyzmZiPuBN8XieQYLVE+XjenQRnlft/b+ugScJsJDpX+1uNrH/utNu
y04e4IPqF7fmtayJ/PwPACGKnQ==
     "], {
      {RGBColor[0.9750834266083355, 0.8111248261070354, 0.14305297912214776`],
        EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
         
         "]]]}, {}, {}, {}, {}},
     VertexNormals->CompressedData["
1:eJzt2F1IU2Ecx/GVGGjaCznbxSzMQmYmSIWRWw/hIEihUJdYhs0K14wiI6Nh
4oUVaRlaFOSFRkFJIhPFlwv5T+eEBFObZ5vnWKhtcy8ShqS9UObZ//osNs5V
PBcPX/hc/J7n5tycxJKruRfXSySSH2snYu1I+6C26q2LYBkwDHrvtc87gbq4
rl74+Thp2UWwDGyL1nTo7lAP1/dKLz3hHctAT9uAkffOmj5d1TE3wdpgy67y
rOZ46uF6Xl12wLE28D2LVvN+uMKgOt3sJlgbRLzrsGqff6YusmfMdl7R/3YT
rA0aNXGGts3Uxfb46vEGtXaeYO2wco1Z1d+Yox6mtysuBBxrh4/fqyVla969
Lm+hcGSeYO1Q/ubr0O2RWTC3Vvp5x9ohfbFgOJgL7VBHN2btrl7M8BCsAyyd
ldOmWOrhev7ow4BjHRBzZoDj3dKWL5O3egjWAcqXyybpkRnqIrtZPmzpkXsJ
dgpOKnrrZro+UQ/TJ++mDPOOnYKuRwm1vDeWGl+ca/AS7BSYcljZe/M0dZF9
X8GHuOuRPoJlochctqf+NQsGba2UdywL6svexGAutPO/emRuRcCxLLi+pCYH
85LsDfUbb/oIloUH/fo0TbGD+j88t6ko4FgWVnc+TQ3mxfqcnBinj2BZYJXf
TiT5Geoiu/LA/UzFcT/BcrC/Ke3ocrYVUpNlSt6xHHhHM1XBXGiHOnrmWc/E
ypiLYBmYPFTPxvY6RXPTH5UmQeYnWA4sc9GKiZbJkF3o/aH+nxTaEbp3663u
lpp+F8Ey8CtqR5Rq3CnoB181D+rS/QTLgWZpSWtcsQI3OzjAO5aDoRRrKe9C
O6G+f/umU4F7sRyMRXrP8/tCO6G+X+j7+gtKuqpK
      "]], 
    GraphicsComplex3DBox[CompressedData["
1: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
x7/oxtE8Gq1xOmEyOGwUbhPt6iH2///+RpyX
     "], {
      {RGBColor[0.9750834266083355, 0.8111248261070354, 0.14305297912214776`],
        EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
         
         "]]]}, {}, {}, {}, {}},
     VertexNormals->CompressedData["
1:eJzt2FtIFGEUwPG1CxatqIWpZGIllJpiQa1GOGtRlt3QUCjBByuSMJaKDdYg
tPACEeUlzFDUvJRpL5Upq8spg6jM3HAcdb/BUndn011yV13ThzQ/voGeZsCY
ImUePv7wezjnMI+zKU2TeG6ZQqGYmX/L59/12xsOh8TbKFIEqZRq0HWkG3bp
y49iJ0UwF5n+TsyF5ix2N1Wz8dhJEUS2dNF/4hprnCpYaadIWQj3Gp1y3Hgv
u8S+33qmw+emnSJlwTNp83112kvZJXbXxR9RnmV2ipSF0OmKKnd9OZWrS47G
TspCxNvYvpUiLjRHduInk/PHmEQ7XxbGlWtUxoz2JeuGmGQndlIWpvsL5rr+
gXevatPcfW7ji+BywHBWmL+R2jvRnIGdFIH3z54HYi40R3bi1bHHTgUyo3xN
kDP7wokoZtF4k2JfCnZSE9T6jlj+Ry9toNtSmBG+/VC6wkM7lI9kl9jvhRiD
dJ3f+PZBzZDv0yLHF9kldv+vY09qPln59sJUSpLfiTeDskvsc/2FmiqO48tA
n/+WAWbH8F/35pHGS9hJGeh4rEBL2esN6iFHAMeXgZ2zo989E8zU+KFrA9hJ
GQjKUU6KudAc2Yk3bLQEp2stfHsgUVeRPbPdIrvEXhelel3iNPOlQbvHe3V2
18IdCl61YyelodUn2l323x7QclrZW2DmS4Ppqp49oOZkl9jXJ5y1OZ7Z+CLY
Wuh0yws0gpC7PnB27KQIxt1mJnNFvGStb+dug5kipeFKT3FTiwdHLdSF7l/o
/0yhOUJ73Q76PYrLsvFFEOs1nFnU+hluTUQ8xE6KwNw+XYk907ZOfb7OTJHS
UOVyhF3YxlGNlTUx2ElpsNJl4diF5t8xph7H95Mi+FivaBO7X2i+0PfJCdXW
4r2kCHRTxXli9wvt/QXsE+zf
      "]]}, {GraphicsComplex3DBox[CompressedData["
1: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
Yp/a
     "], {
      {RGBColor[0.5503934694927846, 0.9941957456141342, 0.5381531171453899], 
       EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
         
         "]]]}, {}, {}, {}, {}},
     VertexNormals->CompressedData["
1:eJztmFtIk2EYx4dmkqSFYLBmoakQRmmUgVE9ddNBZBfDstSOMvAQ+3TlVNIM
IW9WeZOrCFuWSppFKIGnOchMXQeydnCZVlpGNoxGeUitfMf7Xr4fPDD4bnbx
8YMff/7f//l2t8hTgkrtJ5PJZhcf/8VnfqRqn67DaqaE9MkKRW++y+zz3vUa
Q3xR+lcrI2R+PpTVfJLv5droQuIpofhum2ge2yOVx+7H3jXa+rd292obI6yv
/bTRoeT7l0XB9cRTQk5biWge2yOVx+7H3tW3bVmuOsXGCEZj1NiSRL7fuWc6
m3hK6I7Ri+axPVJ57H7sXQmWyP5Qg40R9KHHov0i+L5atryPeEpobeoTzWN7
pPLY/di7ZuQt5Tc/2BjhQl7uDb2/z3vbzx+uuJKx2c4Iv1apb6vGvnN9b3td
JfGUoOhyG8Xy2B6pPHY/9q6CqeeFJr2dEdzD39rnuvj+1dN6HfGUoFg40SGW
x/ZI5bH7sXcphwvr4n/YGaEsdsXjcIPPe9sHXy+9tiXDwQhDBTrN9iy+HzAm
GYinhKD9s6J5bI9UHrsfe5c6ZI1N+dbBCGm/G5KfbfV5b/uEjwcehh0cZIS6
P9o4xdyEz3vZL/RrNDGjg4xQORToLm7n++HIToF4SnA/Ov1TLI/tkcpj92Pv
kgc5pqLOORlhacvetAAt3wvmTTPEU0JzeM0RsTy2RyqP3Y+9qzxAyDdFvGOE
anOaYIrg+56RAS3xlDCnatCI5bE9Unnsfp4Pq4o9QzwlvJku8fQnNuaev/Ta
yggbhJT3oTku89E2XRnxlJB6yz1EPC9/b914KfGUcDX1osc7QyazVS+cjFDz
RVBeTppAe973wf4/yevhvXdsPM5k6bEygmVlSLyfxsX1FZnJ/9ZOORmh+4Hl
vjthguvvVDd2kh5KyH6yy9PD28/7ffPUrgXSTwk7ZMVNpJ/XczwlxvNeSgg8
K4ju5733PyfSDTg=
      "]], GraphicsComplex3DBox[CompressedData["
1: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
     "], {
      {RGBColor[0.5503934694927846, 0.9941957456141342, 0.5381531171453899], 
       EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
76yvX+ya17KcHMS9q6n7coT9sD611cePaxsLI/Rd3g84D7lrcd87235OcC+O
VH9XZd5L78wTbsDHyUFH64ec29zluCuSd+rrk2CYBvrYXMtLspQHact9lZzF
nbB5ls5P9LnTkl8a6pPkgmP0vc7qExfvWc6ddp763HXP0x78PNOv8JMLnC97
ynl+vH5ITuGeyX2YPMXdkvvwRcr4J/m9peNeqD5tOT+b2/9SZe7q/dxH1odc
wx2Vu+tl9oMvgT1K9Oe+yqx/N/WJF/J+K32VvHas9pOX2+hL5NC2+t5Ay1m3
AbZlL8jvrd2LQeqzPuTidvowOfQ4/ae7+vjtEMux5xr12Yue2oMPX+V64pPk
vvb6Ht8yyG1FvjvBtSLGT3TuXyhfbox0cNw+6uOHYBXuw92NR+TOxuMprg9n
wyX2ucx+uPOSB7kP9zD2T3b9v7Yt91xyHPfqnsZaJ+dCzuKOzf2aHMT9ubdn
zmn5ltjv6F5wJpzqXuyoPutDvuO+zV2bPMX9mbvzt+r3Mk7PdN12Up+9WK49
3LvxKc4IzlryFO8CvAkQu8QwOY1ccY6+R6wQM+QN4o/4JLccrQ65ZV918O39
1MFniCFiiXxFbumi/1S0HP8h5ohV8kkDdchLFSzv4BlylvtIvBLP5CJihfgh
D3AGX6Bvc+5209+aKHMel3OOxEhj9clLxCIxWeQcZGKziv3jb5UcF78t0U/I
LcQ3cV7kJWTi/SD9lnxU1TXH3/B34pDzm9giPskbxAoxQ5451PIu6hMn5Bly
yGX63mHq4+fEK/FMriC2iMn1rvkA96KG5fhbNfXxN+KY+C9yzhX6Xk3H7eb+
9tMfyA9X6dvkkN76W3tlcgux3ss5Hq8+uYVYJCaL3NLHPW1h/+Tew217ob7U
X7/CJ/u6dyXK+HBL12SFcn/XExzb3r3A3wbqS+zjIH2vjeW/u3dD3Xf24mrX
s6366/Wxa/QB/GSIPlZB/VOc+xDn2079DfrkYP2zlfuy2vUZ6rqRU8mtYCjW
ivOOXModlbsqWOyuPMm5/ln6L38bpq/enSecuWuWsCYyd9F77f8b96vUvcBP
b9RX78lTjv44S3kaGTzK+xpvN7wJcY/gWyw5nfsfZyvnKtiY76O8RXMX5p23
ibbfps2Mjx1gRL6Hcl/g/AQj3GKf2HuH9jM+Nu2u7SO0n/I7tZO7OW+14HDu
KLxF8g4J3hupzDdZ7jI9tJk3SfIFeeQBZd79KOedj7dB+qFshf2g86v6zJf+
HlRmHqPsH/vZA94IeLeknPcr+kWfsq20p7vrw76Cs7d2TeiHO81o14e3RN5C
eV/kLoVMbqJfdKjnG/cYy0uz9EY6LEs5boz9kB/HqcNdCh1yB3lngjJj8I5K
H+vVJ69xb3tEmfgl3xD73Kt4OyXHkXe4W5GnuJ/xNku+4zv1Y8rcsXiPJR/t
YDlt/9QGZOyeqN9B9MO76Wb7py2/eePl3ZSyyY5L3pzkWH8rU44e4/K2yjd0
7CCH8v4BvizJUh3vw7y58j2dexz5kblOU58cyTsPmJmyqZZzL5yuPu2Rb1L3
afXJm+BX8illzxgj5LinbMv3HGTiqJZ6R9jPDPV5B+KbTfMsfbPhe08t+XOO
Bec3OHm4bbGdWCFmyF8/qddMPsu29P2C5eXUJ75+cWzGras+fRxpG2zh/xYe
1ZdecL70Ay560r0DQ8xxzcEY4Pii7CX75y2Eb1Rgcr5bzbGc71V8o6rj3iGD
+eu7j6vsZ7b98+2Kfop2r1i+yva0reMYxXex1yznPYnvWNwR+I7F97C68je1
Dc5v7i+/aTfl4BnuJJStVa+VfF6+5f+U3rb8NfUZd51jM25D9emjnm2wZTvX
uae679hPI2X6AC9xzwHnzFdubbwsdy+KOu5xvGnxnYy7DN/75qvPNzO+7fFd
j29+6DSQ04a7CRhrgTL8fWX4AvsHd3Fv3OhYH6nDN0Te97g38W3xE22Af2w5
2Bbsix81Ug9bNtkX+k3sk7K/bE9bMCL9HydflG/5JrrI/tD91H6aKtPHk47b
z3ktdC5gP+579M2b3FL75C7CnYT8w1nOPYGzlwSIHv+XtUQZ/ea2pX6kbck1
3DO4e5AruItwJ+Esf8hycsQp9k/e4E5DLi7rWi527mNsy5nPWchdgvMQ3+H+
QJyeqoxPNdY+1oaz/xt9DHuXaH9Hy8kn3GO455BDOulXxf2DsTiPOeO5/3Am
T1Cfc/50y8kDYAowwP/+xytP9xPOXc5+vudx3pOT+aZIXuaMBHNwTpKX+C5Y
miUMQjlnKvmWb4rk3Gn2yRl7v/2wzuRz8jplo9TvoQ7fesnb6K5Qf6TyfdbT
tsADqx0Te9a5bvjAGvv+TRl/qG+MEdOjraN8lf1gQ9GmyPN8EyXX0/d6+x/r
WEPda3AAumPVZ9/XWo7MXpCPJ2rrSu0f7xriD3wP/dM9Qm+jMvUb1Blv+bAs
7c/f//KrDa7BBPtBd7L7WGCDv93bTdrT27H4XeT8TZaPc77MiRzON92+7mlZ
v+lCPFQSp1OUb/BsY53beO5t1pbJ9gMu+Mdy+qRdbj/kcP7HgjzOt2DG6m95
GWXOh9z/x5tq+Y3659Z+P/4vckRz8A==
         "]]]}, {}, {}, {}, {}},
     VertexNormals->CompressedData["
1:eJztmntIU1EYwFdm9rSXJVbYTIyaVNp6EEJfUWpYZhbWKNd6bESapgmlpRWJ
SakllUqIURilFYW1MCM7pZU9LUqXaVOn2zV1ES3paa8L5/55Fieum4vzz37w
4+O73zn37DuXc6/Xxm0rNH0lEonznx+nP9x6LvRMubQeYcK+2M6IcmkHYl5c
7x41Na1gsl4gxJ9PDWxKfPvf+jmnS9N5jwmHlkoW2cK7hL8wZGQ0C4T9Re7T
ltWYiN6wrq2R95iQZ06dIabvehXZzHtMyHoU6vc/+KAt3RckbS0CIUv+yfwz
18C8yH5tY/HoawEmgTCoX26DzFNH9Dc2PR7Oe0xQO3+X+FqJp81jL09bP+24
rkT7bFEe5QTCXZc+S0ssJcyL7FXp3jvdXTmB0O0docnOfwIkn/msPIH3mHBU
7VNmLZ42j708bf2047JcepizY7ARYUKVyiJdWaJnXmSvehfPyQsMCBPGzk4u
Cx5jZF5kf+NAS2tNSyPChKrn77mkTW3Mi+wnvS5o6oxrQJiQ+/VNss/2duZF
9hv658XsrKtDmHBvglT27VYH8yL7Jql/+MguHcKEn7GKj27HOx3Gf02cspL3
mBCWdcDSG/1txfSAoNO1CBMiskNDtePMzIvsPUrz95bfr0GY0H5ibUpxDPNi
e8vn7puzDzYgTJgYcdDVSdOOSD778irEe0zIGbtwqDU/VeYfsN2DEwiXPb40
HEt5jEDv7b/kMCcQ6hJdOqoUWqCNf784cR4fjwkx3mfT7Rnf0+PtbfGOPv8z
AhMGyn1NCBMMGcc0qnwd0TfnaFx5jwm5e9Lm/4unva5Yvqfr795dqfWbVIsw
YfW6a7s2hpipPalf0b6P6G3nQo7ue9v5j6OfX5HWOel/QeqHpL5HiqfNYy9P
Wz/tfsG8dU/b/x1lH+zp/TF2fVfcfjWHMCEos/q8Ql2BmLfulx8yOuVFcgJh
ZqFbk/xIJajGXxjAe0zICVb62cKT6qH1PV1n1Kywl1mnOIQJheFFsWXKBOb/
4h8O8Xmjrq5HmBBtGukrf9COPH9tbuQ9JkSZTVN4f2TU3B9eH2sEQn2r9voa
pRlInrSvkdY/qQ+T1hWpj5HGRbs/kp6rSc8tpHkg5Xk6K7KWrxMTtj0/Mc3a
PJOuW2vOD5G9bEGYcC/46hzFHQPxfRaLZ/G2jHceUJFU7GlEmPC0bkhr2WI9
8TuNedHRss9ak0DwBF1S4YgXiNTHxMpPykP6zsTR84g1PyyPY913e62f/h8M
hftOGQVC0bAzkqiweligST7Je0zQO6VMtIUn1UPr7VUnqQ/PLL54PT6uFWGC
JEGnLF3fzOJZvE3jfwPhFLig
      "]]}, GraphicsComplex3DBox[CompressedData["
1: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
Mo2dmf8fcBpzbg==
    "], {
     {RGBColor[0.681434051273984, 0.7767193300301949, 0.1722865512927394], 
      EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
/mvqdFAHvrVj/qHfflmb6QvuxD/jq8nhR6n/hmO2Vv4/48tb8jyvt9UfpRz/
P9jnOMr1vNT7Ha0+9UnkP7uGxAtyLWIBcZl6AbHjcPkx6oBZiQtt5McYC6gp
sAeJHdQLjnDvIydGkO++47wdnYtx8EsfqA9P3aGB47+nDnHno3J5bII/3pj1
seO3lR+r/MN6PDk2MYuYQt5OPMJm8D2+HT9PPWKcfuAz76WdcnSIa1/Ij5U/
Qf+DrxtqvGB8Yl9n513R8Zc4L/v6S3n2Ozh+vPt9iTYQ76h3sGfHqUPsG2ff
8fqKb5SPcQ0bqEN+TtzsKo8Oe5+6CbGV/Uhthfg7QflRzkvtYHqR8qXq7KW8
1ndpPf3vlB/lmBN9t8kTeN+O8h0j5hK7f6o3L/yMIuPyL+oTx39VfxflDR0f
+Uz1GZ/4zlzL5Inj1GjAXcR36hFgA/YgOQz7lPj+u/rgB2o97Jej1VnVtfrO
9e+gDvKJ9q1hDMY/yf1IvnSMPDas5vhlPZ4aDXiDvdBAO4+Rpy7N3mSPTHb8
Zdq8j30ZhzNxnI2bWyRmHOmag+WoN1HHJt9ayboNe4e6EvXqjsrZ4+Ql1JKO
l1+lns7K9fquog55FfkV9erjHLO2p5DX3nlqVY3VaSjfWR599hE5Xg0rUl+j
Nj5FOfzxyhlzimOiTz5HzYt3m3eJWhW1buTkgdTGye2oc033/W9ULd8La6rD
dxbOz1DzJLejRsZ7yHve2L5dnKuJ7z861M/Rb+K8vKvkjbyT07RnprY1ccxp
6lCH590jV+T9IV9cR767fFPtb+xc09VvZt9m8nXndX2XqJ9taM5Vdyahyrp6
D3Xgyfk2UId3aX37zpRfT/11fZ/3UR/5rtbc3iOOV1mrXx0sUeV3VbbBLG2g
DksdHx2+r1Knoy81/F2qrOm9XGRdD55vAjO8L+blGxnnjKlXg3Wp+5P/cp6X
72rEDubcynmRce1Y91QLedaE7z3UGGm3kKfd0r1G3GzuXHy/aOmeYn7kTMB3
Yc7k8N2Bc0Zby/ONmN+cf+L6tr5LjNlaO4mhyD/R/tbONdl9yh7kHaRefJy2
tdF+vk/toJz7Za35TsM9ttF+7G3rfbGWO7q23HtbnwXPoZ3Pi/1MLZc6DM+k
vc+U8xt1Z3iL/A7Gd+7THJNntqHj8Oz5Xs43cHTox3i7OyZ+Zzf7cu53t3pz
8Q7xLYczw/Sh5sP3NM6rUMPB73RSzllieGpB2MS5F86bUP/rrBxfx7qBTzif
zDXqQuihw9kWxujomHyX66IO/qWrPGdjsIHzKZxt7qo99Eef6+z/bsrR41xN
3XnfKuXUl/hG110e/7K3POeW4ak18U2vhzx7ex95zj/DU1/iOx5nfsjL5hXJ
zy/S1/RShzPSvdSh7amcMzPw9MOP9FaHs9Z876MeRct5HupXjAt/dZE+or86
nKPurQ6yfsrRg+esDT6orzqsBffF/JzNpg/1NPQ4/8O5GM5p822RuhNnKzg7
SP0Z/7Kf+nw/HKgO8W2Q+5H+yDkvzTs9SB3OzDFOB9sD3I+MN8AxkR2ovJU8
/uRjr/XUz7DP2decO+RMHmN/4N573z2OTl3eXaVOL3WHOM6nXutlO1Q550E4
18h3B856cFaS7wt7FCnf3XaYfakh8N2CfP9z++9rO1wdauSc3eR7Qccix2Q8
zn2Mqpb/V4VvHuTvS5y7t7ojHLNTkecyGeMr+/exPVSe9jD70m+kfcnfmYt+
nB/lTCfnOcm3OU/Ctw/yYc6u8A2Os6CHOybtGHmuH6EOeT1yxqidDe2s/mjH
RDa2Wn5mFDn3wTkUbKj9z4VvMLX5j1Sf6+Odi/ydb4Tkzj/Yv7/tBHU4/8o6
187KTlQHH05dG5+H7Gjl5N3w5NScVZnsMyLnhScv5mztMcp/Vq92zpVrXZVN
Us45VM7Ccp1cmO9Pvyo7Th1+w/M9hfOrU+WRHSvf3WuMx3X4QepMcZwffbew
bZl66JAj880GGedfOGvL9ybOtnAel/8EcR4XeXfbafYlj+bbEjnvH/bf33a6
OpwpZpy9bWeqw/wnaD+yWcrJbeHrQECZ17Bhe7EdsZgYQRwlhhKLeF7EI2Iu
OsQOYuzJPkfiJrVrYit4mO8TjfTl+HH8O/6e7wr4dnAp3yQaG7v4hkFsArvy
fYI4Q1xCh1iDv+TbAL6UOIMOMQUMxncIfDCYmXHWFAfyraIWT+CJF+BJ6nc1
3Is9TcSKfJ9oaqxAB/8PvmLeZsYEdPDbxBy+bRA78NnYgM8kZnIOlVgKxgAb
1fwuPD4ZH8u3BPwwWIAzrOAB2jmu8+7K4amX4g/xkcR/cADXwY2MQxzgN+dc
iflz1SF2d9aeM32OjM+crDlYoWbvJep0dJxaX87LEs/B7dwvsbeL8jrMUCWG
qMMDVeIAngvPm/O1xLe6c7XKu6rDGJyzvcr3YS9//z9GUN7FvmCJbuqjS2y/
1mdE/ORsbt3/i3zfzlU+T76nOufJ03dekbJrlO8j38Pr1zk+c3GWd77Pmjjd
T+KcLrGad+P6arnu9b4n6Cz0ve0jf3WR7zbr1lnZDfV0Fti3r3JkA5yLdwye
M8fE9hu1B/lA5XN8xxbZDzl573W+P6f6fHt5jz3tt8i+vKu32O//AG0XwbY=

        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJzt2mtIk2EUB/DXiffEMi9gCppLiEiHiUmmU8wSk9AKs6JEbQRmiVmQiuIQ
FUvxhmSZqWDk8hI0MzRrGblE+6CYF5q3ba65NrVALZMuQvTs07Emj7LB2YcN
fhz+28v77jzPzju3+OTjPBbDMI9Xn4xXX4vKOSWyqHER8+eR7dTT6Pg2RSNC
p+tWER4BnbIJ4t7y2rOfTdFpe0BiDce3e4r4tbozZcogNTplry42UQW+kxH/
uqXWrlShQqfs9VXJDY4dCuLKjGO9kVlKdMquml9yjqxXEa+KzufI2HJ0yr7s
yzZdlswSb2f3tk8aj6BTdo/OYovCX/PEpTnC0ZSCXHTKvhL1pdJ269xfZxbN
TWPN5oa46HS91HkmTCEl/YSZ5kjKIwZk6JTdNsAroURN1kcmvaJwwTNSiU7Z
b0y4Z2XOk/0e02VlZjnSp0Kn7FyfkHsrY+T3C7PdUlHl561Gp+ysPSfjhMwk
8Yrw6peCn+i0fSHx+sOhODJfYm6JjDIFlzXolP3Ax7wg1xXtHG/44Burm6Ea
ES0PCxbwCwfUxBNdT0j4dZOiq899ha3x2n2m20jY/tSlHqzH+k2t39sRbXye
T5yJiAvZGX5JzEVfny/YDfpb2GiIs2fzRkO7J9DX6bldmguvtpH5PxMS7lKc
z9Xo7FD/1/X+jr7Nfwzd9W3OY+iub/McQ3eob0B9Blp/0dd2aH+Cvrbr2/7H
UFzf9jmG4vlXRr34U8SzHZPE/Y3lEhH62t71Qt4cP6j9/rY6OCzyWjrQ/+H3
J6JMSqXaddn/2Z3h2+J+LvraLrbJ8GtpI549v3s8QLQ0AF6fUD3k0PnCfMzH
fMynlQ/l7GhOE/Lk2n1dZUl6Q3vsU66uDvVPzMEczPn/HKg+YinhdJsTmfsx
Jt+bhfy7H9DRN8Td64qSbGq0c/t6j5UHr89pRJAL+lj2R55o53tHmUOBnTEa
LuTQ/Apa16C5DbSuQfMK6PsF/U6HjnejPz+0jut6XFCfgY4Xuh6g+zjQXBc6
71COrtcV9L5ye/dTPn1K4p6jri49PAX4/z2sx/rNrA+W2+x6VEbqs9PGSoxY
9Qrw//8SQfvFrI5PxA8XWo/HVErB/kArH3MwB3M2Lgdal6H119M1aVD9jeQw
BYM/Uq39pOjrdKhvd4lzsswHZojn8Zua3u+bxnqs39T63037HQg=
     "]], 
   GraphicsComplex3DBox[CompressedData["
1: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
O+0w9WZqTvVROSHrdBQOEg+fbHsiQM2jdgos1rrRiIPJLJV0a0VqHvX7Q1VV
rRwBAQfiv3abUfOowwVONkO7CbhSM6Z8yIdLzcdOjn+fVURA/ULn/exEak6V
sCPx8OpxAkIrd355a0fNo+ZoqHFcDfmQ6p0yLfWL8lzG8/TTUXwomv16nstx
ah41oZ723uYdC+q3rHebsaDydtKiy2Ur63CQNM/a2H+U6jMaM9hOuiEHMkNb
2zu8J1EeM8s3Pm3ZyAFB7QJvkZJp5M7bg3JTdovBkuHVRySOC6D9Okgkv6Z9
TAwcN159ej2bymlxd9p+K0dxITqXw1r5kspj15z5fD85HpQL+1vV/KRy10Mx
U+1y8muvw5dkR4LKS54OFflC8zCYfd+wpV+bykWjmjb6izzI/YvImx9mR+Wf
E6yB2vV3MAjywj0kjjORczsiXfZPYnCtOqjoejaVfy6ULPiTRObtRvn2Ed2X
VM5ZGPPw5IMYcv8KNl1d85PKM3McY/tTpLnAV5+lnJlK5WFt9lN+xw0uGEUe
26f5kMq9G+6PaKvo88C3q7u4qpPKt7vcVHb41fEgU99y0oZB5VJ90Zv6jhoY
1J4vNuxVpfLny7Z1dScOYzAzKBsRYkXlzK33Ol2uP8VAzeJkLTeAgbwjOuTP
aw4ODtf7JDJTqZzpvVPyVP9WHKIEt9hrPqTy5JhukaTEZRzK7Eqzqjqp3HgS
M8/R/Y5DT/G8HhsGlfewb191HTUIkMIilvaqUrkureLI6xOHyXOyR39AiBWV
32rl/fXWBvLgh8An8z4zKqcNdb+7aUqei2XtDOKP+NCQH6vwXuNlQebo4msf
eYlUfmMnMd7FJWNwmMedk1VC5bcUj8xdxW0Y5OwN2KXVTOU3hTWrRpqUcPj0
tDmvWoDKaYVS78Onfcn3co7xgK0ildNW/vKRnk+ei7WDbqzoM6NyWvUz5g1T
8ny7q4E4esSHQ+XGi1l6XuT7lrT48DNeIpXfWnz13sYlE/DkdAcrq4TKb3vX
fXAqbiOgv33dJq1mKr8Nz9k/0KTEhzi5T+t3HqdymtGtBL9PiuT58bT3jOtS
Ko/Vhi+mT/mQeb690WR4C5XH7Byrk+fdx6B8pV50eBCTykVazkprBXH4kXSl
QTqdyml+7IkHHuY4zP7Nks5/TOW06Y7E9bGJOJibHXDS76ZyWuR9tZY7zTgE
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
    "], {
     {RGBColor[
      0.04033069904387565, 0.017035546447341288`, 0.8829591725873551], 
      EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
Hf02vFz5CcYl3ymn6bdV/A79f77IgQg=
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJzt2XtUjGkcwPGK3dzCms66pBZDaNmzctlc385apOOSO+u2WmEVVkVWEofc
k1vSVsjmMiusW7uifruhMlMZkrm9lJJUI/dQYnue3/z7vHte+26j1T99z/mc
33neZ95T0zPvtPdcNNbLysLCokX1j3rVDU4pOhvQV89hlfBmYO9WaYuN8L75
jfEeCcSxSuhm37JWeZzO78rbfQYOqwKfx25THn1shM2NYtKJY1UQYbe5zv+F
j0w61Kfs7S0OmwnRF3x3FLmWvnfuvCK5N3FsJvSITalVXi/jZJte6jwOq4Zn
DbXNthcW17nEvmL2vPoFCws4bDbsX9jsksfKIrh5vV894thsiBs07LKQs9b5
0FxeHv4RcWw2RO3VpBD/M6YkZ8TDexz2JsxO9W+f37FAMn/mEkkdexMSFGUf
pD9Z4SSvOFPCYfXgNmfbb7n1NEwPs1BQx+qh+bRTx+r8n7356Fib5L1GDsvD
tNF5a7w3hsDSLyOpY3nYVxk/1UfAWescWaCgjuVh9C+y+PkCLva6Yl3sfsT6
RS6GOpaHqIOpD8l9WJPbMXJnQQmH1UNur4WrrMtyOJYPXlr/Z+JYPST5yQKl
9ItuQ/YQx+rBojw9REo31/6HOwZtneVYZKoGwvWXD4y4ls+1fx4aRhyrgZkT
OsTWhC+e5BNKHKsB1cwf4qR0c+0/LWO1okNUganZ4JDR58UXHkXchZcnDhPH
ZkPXoHavhJy1jli/NMmGOjYbvnM5+b9wXdfzrRMf5pmqhuZRjZppVMWc3M6K
OlYNx5YfEPStLv5tiGPV4HfetynxYlBTx6ohTuVIvdfJltSxavj6aDL1KzsP
tiKOVcOK+WV0/eADM+h1sWrI3TRR0FnrsK4rdp9i95+xNK2tv9NtU7Ng/HDN
XhfnUsn8jGuMHXFsFgw+PGif0HxVvt1nxLFZ4B/agHph/GN74tgs8CpdJOis
daTap9j9q1xftchMNJiqgnbLA88r3pRy5V75nxLHqqB415BEIWetw/JZ2Q9s
iWNVELI+L1HIzbW+2HVY3tBz3YXzw/SmKuFH66NBigVGLuuBZxJxrBJee3gL
Omud2r6+2HVY7hnR8HuNWm+qEgLudG6yaYgRWO7gyFPHKmHosuLGQh5xx+r1
mTv3OawW8sdEX18dmwujLK5HL2lh5LA8hE891MCvPB1aF39VReaxWuh2m88k
82O6zokh81geEpocqPStnhe7/jK5B53HaqHc3+ealPMVTiF0/1gtuFoeyzDn
fqSaHz+2gt5/LA+apJgyXwnnWfsJdE58Q+axWtgY+iBNytf7x9NDA/K7Gzks
D0uvuI5w907lWB7bs/NA4lgefC8f4aT0rNOO9LpYHpZlaifXhLP2Ey8rovPY
ak97NoS4bue9/sSxPARc7TiT+OjDOv3pVsWm6mBLoWuLoZdvc7/qHvHEsToI
mp7YsCactR+xzlpfZuNNHauD1W8Njd/Fz+nH0etidRC23tOWuPa2u6Vtod5U
JVg7FmxfzxmZfqsk4K2s2rFKiLBduIM46/1f7PdQdc+1zPv8qrY8p5LquRZr
XuxzqrrnUe+2T9b5k/U+wzq/sZz1//pDc9b5luWs88yH5qxzmthzzvt2TpNq
n6zzW20/j7FcqvMYy92fJg8cFGA0lYeU6Q/7eh1PhNand1PH8tAz49thxM85
D6WO5cFW0cNTaJ7lG57YU8fysLZlzCLiE049H0Acy8OTkAZB7+Ji9yPWRy0/
bPdsbymHNcALt+2We1LVXOQ3I6hjDXC1y6r6xNMX5LYmjjVA7yP9mws5ax2H
Mbb2xLEGCLuS8zyi2ufbnWtLHGuAeYpLL9/FWddlucxlLd0/1gBNNzjJiBc2
fdyGONYAigaLrIk73lX67FlWaqoB5KkLKpPLrwHLP5n42ps41gDN5JGWIOBi
169I607XwRqgPPiSNQi42PWl8n4FOau2hRg5LA+GyCT3xJlnOXO5kZtEHcuD
1b4twUL+X+9nbr8E6lgePp/6eBJxh5epWStX6k1Vgk3lX3Ep043AucygjlXC
k9A86uvC28hOhOk5rBK6FCQMvDDZyLGc+dyP8b7Bes7A+nthfY5mvS6x54qV
jY+fIZ+LsUpYsj+Mfi5mnZO7daqi9wGrhBub/el9YH3uFnufWdcdFl2xXu5W
aGoObCiv6pjuVcj8PpQ1z/pe9Xe/1xvJPDYHGsmDO5hzXuz+xd4fb8fldB6b
A3OPxnSqiXnW/sXO81WB9H5ic6BE4yCXcn2xr5f1/2jX9t30fQnLg0/bTl7k
fSnupK3F08/um6oF/simn2xc7kjmmkAXK+JYLchGqpbUhJtr/6zf/ynt7k8d
53zP1JvglJUcf6PnXdHzrL9fc82L3T/r99lc86y/39oyL/b1/g1tDiZx
     "]]},
  Axes->True,
  ImageSize->{360., 423.9274741100605},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-0.3143991163080698, -3.3142281494786907`, 0.6058423630514442},
  ViewVertical->{-0.5232947863284885, -0.43590390551231106`, 
   0.8083158626366345}]], "Output",
 CellChangeTimes->{3.524394456328313*^9, 3.5262750588455276`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
hyn/9znOZzjn/wPB7ubr\
\>"]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Edge-Vertex Contact", "Section",
 CellChangeTimes->{{3.5243970955747347`*^9, 3.524397102386077*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "min"], " "}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "range"], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{3.524397112592499*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"evContact", "[", 
   RowBox[{"i_", ",", "t_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "M", ",", "v", ",", "res", ",", "x", ",", "y", ",", "phi12", ",", 
      "phi34", ",", "phiRange", ",", "phiMin"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", 
              RowBox[{"i", "+", "1"}]}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"rit", "[", 
             RowBox[{"i", ",", "t"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"alphait", "[", 
              RowBox[{"i", ",", "t"}], "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"rit", "[", 
             RowBox[{"i", ",", "t"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"alphait", "[", 
              RowBox[{"i", ",", "t"}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", 
              RowBox[{"i", "+", "1"}]}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", 
              RowBox[{"i", "+", "1"}]}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"rit", "[", 
             RowBox[{"i", ",", "t"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"alphait", "[", 
              RowBox[{"i", ",", "t"}], "]"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"getElement", "[", 
             RowBox[{"robR", ",", 
              RowBox[{"i", "+", "1"}]}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"getElement", "[", 
              RowBox[{"robA", ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"rit", "[", 
             RowBox[{"i", ",", "t"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"alphait", "[", 
              RowBox[{"i", ",", "t"}], "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}], "-", 
           RowBox[{"a", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}]}], "]"}], "/", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"getElement", "[", 
            RowBox[{"b", ",", "j"}], "]"}], "-", 
           RowBox[{"getElement", "[", 
            RowBox[{"b", ",", 
             RowBox[{"j", "-", "1"}]}], "]"}]}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"getElement", "[", 
          RowBox[{"b", ",", "j"}], "]"}], "-", 
         RowBox[{"getElement", "[", 
          RowBox[{"b", ",", 
           RowBox[{"j", "-", "1"}]}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}]}], 
       RowBox[{
        RowBox[{"Inverse", "[", "M", "]"}], ".", "v"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phi12", "=", 
      RowBox[{"N", "[", 
       RowBox[{"aCos", "[", "x", "]"}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "The", " ", "expressions", " ", "are", " ", "evaluated", " ", "to", " ",
        "avoid", " ", "problems", " ", "related", " ", "to", " ", "the", " ", 
       "symbolic", " ", "computation"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"phi34", "=", 
      RowBox[{"N", "[", 
       RowBox[{"aSin", "[", "y", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"isEqual", "[", 
         RowBox[{
          RowBox[{"phi12", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"phi34", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "||", 
        RowBox[{"isEqual", "[", 
         RowBox[{
          RowBox[{"phi12", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"phi34", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"phiMin", "=", 
        RowBox[{"phi12", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"isEqual", "[", 
           RowBox[{
            RowBox[{"phi12", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"phi34", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "||", 
          RowBox[{"isEqual", "[", 
           RowBox[{
            RowBox[{"phi12", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"phi34", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"phiMin", "=", 
          RowBox[{"phi12", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error in evContact - problem with Subscript[\[Phi], min] \
values\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiMin", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{"phiMin", ",", 
        RowBox[{"2", "Pi"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiRange", "=", 
      RowBox[{"Pi", "-", 
       RowBox[{"getElement", "[", 
        RowBox[{"obstGamma", ",", "j"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"phiMin", ",", "phiRange"}], "}"}], "]"}]}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evContact", "::", "usage"}], "=", 
   "\"\<evContact[i,j]={phiMin,phiRange} of the \!\(\*SubscriptBox[\(e\), \(i\
\)]\)-\!\(\*SubscriptBox[\(v\), \(j\)]\) contact\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524397130626729*^9, 3.524397141830743*^9}, {
   3.524397866603273*^9, 3.524397903382707*^9}, {3.524397998968659*^9, 
   3.524398150604952*^9}, {3.524398354196952*^9, 3.524398355258271*^9}, {
   3.524398424135363*^9, 3.5243984750724993`*^9}, {3.5243985302797327`*^9, 
   3.524398530839881*^9}, 3.524398839428433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization functions for E-V contact", "Subsection",
 CellChangeTimes->{{3.524398587931288*^9, 3.524398601206949*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"patchEVContact", "[", 
   RowBox[{"i_", ",", "j_", ",", "col_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", ",", "phiMin", ",", "phiMax", ",", "thickness"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"thickness", "=", "0.005"}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"evContact", "[", 
       RowBox[{"i", ",", "0.5", ",", "j"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"phiMin", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phiMax", "=", 
      RowBox[{"phiMin", "+", 
       RowBox[{"res", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"phiMax", "<=", 
        RowBox[{"2", "Pi"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Patch", " ", "is", " ", "connected"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "t", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"RGBColor", "[", "col", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Plot", " ", "V"}], "-", 
           RowBox[{"V", " ", "contact", " ", "curve"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "1", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Plot", " ", "E"}], "-", 
           RowBox[{"E", " ", "contact", " ", "curve"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phiMin"}], "]"}], "[", 
              
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phiMin"}], "]"}], "[", 
              
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "t", ",", "phiMin"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Yellow", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phiMax"}], "]"}], "[", 
              
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phiMax"}], "]"}], "[", 
              
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "t", ",", "phiMax"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Yellow", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Patch", " ", "is", " ", "disconnected"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "\[IndentingNewLine]", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "t", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", 
             RowBox[{"2", "Pi"}]}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"RGBColor", "[", "col", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "t", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"phiMax", ",", 
               RowBox[{"2", "Pi"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "->", "None"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"RGBColor", "[", "col", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Plot", " ", "V"}], "-", 
           RowBox[{"V", " ", "contact", " ", "curve"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", 
             RowBox[{"2", "Pi"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "1", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "phiMin", ",", 
             RowBox[{"2", "Pi"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "0", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"phiMax", ",", 
               RowBox[{"2", "Pi"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phi"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "1", ",", "phi"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"phiMax", ",", 
               RowBox[{"2", "Pi"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Plot", " ", "E"}], "-", 
           RowBox[{"E", " ", "contact", " ", "curve"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phiMin"}], "]"}], "[", 
              
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", "phiMin"}], "]"}], "[", 
              
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "t", ",", "phiMin"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Yellow", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", 
                RowBox[{"Mod", "[", 
                 RowBox[{"phiMax", ",", 
                  RowBox[{"2", "Pi"}]}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"qITr", "[", 
               RowBox[{"i", ",", "t", ",", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "j"}], "]"}], ",", 
                RowBox[{"Mod", "[", 
                 RowBox[{"phiMax", ",", 
                  RowBox[{"2", "Pi"}]}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"qITa", "[", 
              RowBox[{"i", ",", "t", ",", 
               RowBox[{"Mod", "[", 
                RowBox[{"phiMax", ",", 
                 RowBox[{"2", "Pi"}]}], "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Yellow", ",", 
              RowBox[{"Thickness", "[", "thickness", "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"End", " ", "of", " ", "IF", " ", "statmenet"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524399117509001*^9, 3.524399133852551*^9}, {
  3.524399317434973*^9, 3.5243993393838654`*^9}, {3.524399378113187*^9, 
  3.524399393548883*^9}, {3.5243994567856007`*^9, 3.524399463862916*^9}, {
  3.524399688020232*^9, 3.524399718355218*^9}, {3.527916529473143*^9, 
  3.527916703813259*^9}, {3.527916835200321*^9, 3.52791687096561*^9}, {
  3.527916948144916*^9, 3.5279169761029863`*^9}, {3.527917261547287*^9, 
  3.5279173428636923`*^9}, {3.52791752497018*^9, 3.527917591368762*^9}, {
  3.5279176658069344`*^9, 3.527917693185923*^9}, {3.5279177438255663`*^9, 
  3.527917751808593*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patchEVContact", "[", 
  RowBox[{"1", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.524399156873809*^9, 3.5243991698029137`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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

   "], {
    {RGBColor[1, 1, 0], EdgeForm[None], 
     GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
       
       "]]]}, {}, {}, {}, {}},
   VertexNormals->CompressedData["
1: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
51Aa6rPsGZauoF0/Mxh/n/8BwWhTxg==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  ImageSize->{312.2613572535743, 434.008023066025},
  PlotRange->{{2.002762727382085, 3.6587399231153643`}, {4.494550779328203, 
   5.996258842662373}, {1.6370517089603098`, 4.456893405318875}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.4903658811470148`, -2.873186815878341, 0.9867152889135571},
  ViewVertical->{0.22947176083548818`, -0.5981668995906296, 
   0.9382767307241784}]], "Output",
 CellChangeTimes->{3.524399170923709*^9, 3.524399346644391*^9, 
  3.524399398033308*^9, 3.52439946668246*^9, 3.52439972429073*^9, 
  3.526285543253497*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzUvQecJFd5r123u2dGiSQQURYSBgQCwaxyQkImCyEkbc4555zz7E7OOee4
OUdJYPiwfW0uNti+99rYZIFQ2DS7k0ffc0JVV9Wc7ulejfx95sdp7cz0dJ33
/3/O+76nqrrnezPXLJi7dOaahbNn3vmtVTNXLFg4e/Wd31y+im8F/4dl/Y9H
GEfvtMS/37Ys++Ft/v/2o+JBfMf87wPyPwnW1atXrYkTJ1opKSnW8uXLrcOH
D1sB+bMk6wtf+IL81y9+8Qvr2WeftYqKiqz58+dbP/zhD62t3pf5+c9/bi1b
tkx+9frrr1t33XWX8zJ/8zd/I/919uxZOcS/f/3rX1t33323/TKH5X+CcjY3
3XST/CpRf+/SpUvO97aopx/SPxocHLTKysqs6dOnWyFXQMXFxVZnZ6e1d+9e
a/To0fZRDsr/hKwLFy5YFRUVMt7W1lb7N3t7e61t27ZZVVVVVm1trXXt2jV/
mOKA4kfiK3GgD37wg3xXTWbjxo3yX2J8XB+pv79fTlD87+DBg7EIO94713Xr
1klv9H8T9Lc/97nPWV/+8pfl2L179ye0Ysr+t52hpQ9I3YMe5fVxfqFnf++9
91r2/wLyMSiNtF8pZHBjnPslQtZPfvIT65//+Z/VNy2ti9kQffC/l5MTz07S
L19TU2P19PRY7hcw+aJfQEYXeltNl3++PW/ePPmVDY84uPgd9/fcRk1Qr/Mj
53XkQYNvu57+s5/9zEpIsCdjlF/P5gfe35X/skJiTvbxxHcWqCef903d8e5G
dST3r9m/as1XzzztnS4v4Db+BvU9zwsE9Pfcz5ujXuy482IfMvxi0LFIP31d
HInjN7/5jTVjxgy52MR/f/WrX1n3hqUJOnGJ/9wW6ejyybO9R48l34wbN87J
Ny+99JI1ZswY6/NOsCGDIiYBAtoO39KSX89Sk9poyF5BPdHbbrvNunjxovzq
ypUrMmN8xpnEjYZJfNAwiSTD86arg2+IkgsFtgMDA/Ir8fNQKGR9yqe/g85N
Mc7lBsPzpqlXWq+XR4QE69bi8uXLUos7/IZ4UL4zxuNP9dJhStP2JMaPH2+d
OXNGfnX+/Hlr7NixKl3LSXwh0gHlEvCF6cvN9hF++9vfWjNnzpQKiP+KjPuR
SKp/0XDAROeApmU7Wf1+aVThTHHcbHixSerFCp0Xe8jwi7cYfnGi+sVc5xd9
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
/4kRnTsW/Kdr7qyBbjH317xz79Fz79Fz7xG5SUw80eruVNPuuqqmfe2anHZA
ztur+sjO/ENWt5g5q7cH7LtfVTPvZubdQNPtmnmPmPklNfNuVO9m4mLaXZ1q
2teuymnLKQesTvHAlE0fL3A9s71BzvZ9Vjcz7WamXWKmf3LNlFl261l203N0
u2badUXNMiDmyPyuiczSySOTtK7ocRl5nxzRyd4qJ9v1ezXZLibbBQxdSNql
J9vNZLuYbJeebJee7LVOJedVMYSkneLhikThcld4AiMl7o1yvh+wugC3649D
59rFXLv0XK/puV7T87zaqebZKYbsF66IyV6Wk73kmqxJ3A9f92STrGtM9pqY
LARcg4Brrsni9EVR8u3JXr2iJtrZqSZ6RQw5TfHALJ8e6cm9qiZ3jcld1ZO7
xuSuyXdOXpWTu6on13lFTexKp5rYZTHkvOS+5qJLw6+O0DRvktN8v3UNo69i
9FWmd5XpXUW7q0xRTJDpWZ1iXFHTFNO73Kmmd0kMMcWL1/R9WiM3p6uGOXUy
p86Laj5XWCRX9JzEfC51qvlcFEPM6cLIzelm3e10YmEn8+lkPp3M5wrzucJ8
rjCfy8znsp7PJZllLsrbey7wyFSstxhfH9H5BJ35XJHvqROzSZLzuXxJzsW6
pOdzsVPpEpCzCcq52C84shrdYl1hTleY02X0ucyMLuv5XLos52Nd1HO6wJwu
iDz81lXjm9CvZw63aJ8uv6mOf4njX+L4lzj+xcvy2NYFffy3OP5bUpM3R3oC
t1iXmMAlPYGLTOAiE7hwWR7cektP4E0mwKGtN67qmwMiHz7iPl0e9D3yoDdZ
FzngRQ54QR/srcvyYNab+oBvdMqDfTvywaLvpF0Hu9G6IA5EZG9dUgd687I8
kPWGPtjrHMz0LuzrUfU9GndxzLf0MQPiiAFxOP0b4oDiN6KEF9dB3ysOylEu
iS7hjcsyMut1NeSzn3nnB5Ld+/tkdCHrDY4kjvP6ZXmMgPVnJzb7+SMQmzzk
++UhE+Wh/iwGR3rtivxF8eTvGn7vtndwGHGI1y6rQ/zp3TpMUB7iT5fVIQKG
J5twvJ7jfUAeL0Eey/6BDskaqZjkMULvYhC3igME350D6JVh/fbvLSmVKujv
8vE++G4f4EMqIbzjA5jy+HecA5giMC37OA8gX+K2d/sAH44k0X+HA8gi/JF3
+wAf1cmKfzo/HAGAIr62qUp9KL7Xls3Rx/77vba8q/sT6rWHXbD6tfWfDJAv
ben/mXqh63ntd3Pesb623IHc/t/vteUu5S/+i15b/GuEXlu+F+6O/36vLU+E
fNL32mL8//y15ZmRO9/F174rxtf+YHyv/ZR4/NR/v9eWZ/P+Uu1gPK/9/Chj
yYzz5eWZzU/7X37Uu/fyo/TL3zcSL/9E+OUTxMv6DzFix/iUauzEyyZ4D3I/
4wHLeIIhzgM97jg95ED36QM9OCIHesxRzXOg+97FA7HTcgK5T18TE18EpXji
cOL5ppNEcR5SXn79TAyHfGjYQ9qfaSU+J2zixIlWSkqKtXz5cvl3oNXPhnxK
qWlrI29F+GzEGd3vntHzj1ixzOjnP/+5/IvU4qvXX3/duuuuu9RHxQUjnVmK
aRIPxjQJ+3PqhCw33aS+SozRnYfD00jwkn2/fbugay4PMx6NOhf70wrFx46V
lZVZ06dPN37cmGku8iaKu/WZPdNc7KXtmotpTaiGVn8UZUh+wpz469GClNbW
1lhnI/+axeeiK/OANE87JJR5/nGjOLd6aRHi1NbWyq+ifeZdfNN6IMK0HmM8
EW1atlDr1q2TS0r/N9YZyTuuPq9PQ5tm5FjmnVG0KcWaXO4Xj/fEcmyN7gge
W94Q+YXoTjwof/awA4f1/FcYT+pP+B2x49/iP744sorfC6c6/lMjcXh58+sX
9TbWXXhV2Enew2vZ9eFH4vjJ4eOH/OFHnQLqP//VuKdgyuHy08Lu1bdBGBwQ
x1Zz8NFnz+H5vzJeH4tzGvIdNV+KZxouEIefxq3haTg/nmZ4uny/05evZxoA
8fzTcUzD+ZFpGvK9msmxTMOGwj+Nr43ENOT7Z0fpWzdimobNRXga1vPfsIwX
K+Oci3wD+H2xzMXMqPX810dsLvLN+vf75+KuEA+75jIUVDmXF75pvrD8gfjm
cnd4Lu+PpIt5PtqjF/DoBXR54VsjMZ3PiscHYp2OtukFpHkBaV5AmheR5kWk
eXFEpiM/6+fBGKfzAtN5gem8yHReZDovMp3RTGc00xn97ZGYjvwUq4f07Tqm
6bxAWnnhETWdFzHqRYx6EaNGY9RojBqNUWO+xfiOZY19xgxznHOSn8/2sG9O
LzCfF8R8HlJzevFRNafRyDMaeUYjzxjkGYM8Y5Bn7LcZzGncd+OZk/yvaU6f
Eo+P6Dm9IOZzv5rTi8znRTEfEs5oPacxaDQGjcag0Vg0GotGY9FonJgPGo1/
dvg5yYvn0w1PustxLGC9IO8KewGJXmRKL4rpPKimNPphOR1r9GPhKY1lSmP1
lMYxpXF6SuORaMKzI+HcnQ7cIT03OS+kGs3cRtvzQqoxzG3M42puY7FvHPaN
w75x2Dce+8Zj33ikmsDcJn5vJOb2SSctqbndZr3I44uj1BhtzxH9xjDPMXqO
Y1mBY59Q8xyHfuPRbzz6jUe/Ceg34Tt6jlg66bkRwf8Op64E5UQ/6pmonKwY
CDuGSY+xJ4ywYx/RE2adjtOTHo+w4xF2AsJOQNgJCDsRYScy6UnfYyv/3EjM
WX7SfnJY3JB/zkE56Q9ZY8S00Xks0x6rpzwOncc9Jqdsjf+KmvYEdJ6AzhPR
eSI6T0TnSWLKz8opW1O+z3je+OdS4py6/BBu2WAlyKkHnamLGct5B6wxavL3
64mj97iHwxMfj97jmfwEQJ7wVRXARCY/iclPYvKTmPxkJj8Zvac8JyduTX1h
JCYvP2f/S47uau7MOVlDMkpYISZ/mzUW5cei/LgH9eRRfvyjrsmTISZA+MSn
VQCTAGYSwEwGmMkAMwXlpxDAVJSfSgDTXjT/tZo4I5Cf8nqvQ3uCL4Ix0oMx
woOxKgw8GEcY4/Fg/MMqhAl4MOFxFcJEPJgI85N0GJPxYDIeTMGDKd/VIeDB
NBHCC6TYkQlDfojLFxyKJP8yCslOUE7+I9KDcWIQxPgHVQAT8GHCoyqAifgw
kSAmPSUDsCb/lQpiCj5MwYep+DAVH6YSxDR8mP68CmDG6BEJQr4zT55zSBJB
BEQQCdIKaYEMQoyACCQoI7nNGo8ZEx5ScUwkjomYMfFxHQdmTMKMycQy5Wsq
lqnEMlXHMo1YpmHGdGKZgRkziGXmGHMWfX98scjblu9xDJGxhEQshJKsaArJ
CD5ijedxPI5MwJEJODLxERXFJKKYhCOTiGTyUzoKUunUr6tIpoHVNLCaBlbT
v6ejwJGZIgocmTV2RCL5sBNJyEErICIJiUh4HJusbBmn6ArJgD5iTcCYiRgz
kZAmYcykx1Q4k0U4GDMFY6YQ0lQy1dRv6JAwZjrGTMeYGRgzg5BmYswsQpqF
MbMJafZ4M2xxhnWbE5bsYxJdC3+MHgFtlfyBjJAxXp7bFo8fsybwOAHnJj6o
Qp30iApzMs5NfkKH+ZQOE+emkdOm6VCn49wMnJuBczNFmDg3S4SKc7MJdc44
xsiE+iFnXQUjhZqgo5QR6ihDMr6PWhMfUBFOwsjJGDmZCKcQ3RSMnEKEUzFy
KhFOw8jppLvp31QRzsDImRg58zkVoYhu9os6OoycS3RzJ4xEgPKcijzHnOiU
ITv7JStCA9Y4Casd3AQ1gtbE+0WMk4hxEg5OfkTFOOVxFd9UER8OThPx4eD0
r6sYZ3xLxThTxziLGGfh4GxinIODc4hxLg7OI8Z5E0cixlu9MXqTo1iBeoRE
oAEZZ1BGOVGM+wXN4vFj1iQeJ2HnZOycQrhTsHMqdk7V4U77qgp3OnbOEKGS
MGd+W4U7C2BnAezs7+tQsXMu4c7FznmEO38CY+KIQPuBGOMN6njFwwQZtB3w
JBn0JBn0ZPydjL9TRND4OxV/pxHwNBEw/k4XAePvjK+roGeSW2d9RwU9G39n
4+8c/J3zggp43hgdMP4uIOAFk0YkaPn0zzlB64ZqtB4BB+mAg3TQiTwgApfx
BqzJKmhcnkLQU3F5Ki5Pe0IFPV0E/FUV9AxcnikCxuVZZN/ZOug5uDwHl+cS
9FxcnkfQ83F5PkEvmKCCXjh5RIJ+ny/okCdoV8m03RYhyyFth4oJPArvJ45S
uE+SOVqI8AlrCs5PQYipOD8V56fh/HSEmI7zMxBihhAB52fi/CyEmPUtKYI1
+xklxFyEmIsQ817QIozRIuD8QoRYiPOLEGLxVMv4rps4xXivV4yAIVcHXXV3
nB7jRZqbIH8oRJikRZAkBKwpjhJTNQ7TwGG6UOIrWgVwmIkSM7+mVQCH2eAw
ByXmfFcpMY81MA8c5oPDfJRYAA4LxikVFk3UKkyxrCXTRkSJ9zhVK9xBDek7
hsT/lyp+rcFkMQheCCDDFwMYpgHDNGCY/piCYQYwzHxKSwAMs4BhNjLM/paS
YC5pfu6zWgZgmP+CkmEBMCxEhoXAsAgZFgPDYmRYAgxLR0aGWxwZzClhjFgf
ToGT6UCtBwWD+MEkmRaFFlO0FkGpxCesaeAwDRymo8UMcJgBDjOFFuAwS+jw
NaXDHHCYAw5zhRbUgHnfU1rMB4cFQofRSodF47QO4LAELZZMUTosmz4iWtzs
9GxBpxUdsjiiaWF92pqUrPCQcmhJpt6v0JgmBnhMB4/pyDIDPGaAx0xkmQUe
s8BjNrLMBo85QpZvKUnmgcc8qsR8LcsC8FiILAvBYxGyLAaPxROUJEvBYxl4
LEOW5TNGQpWbDKoEDJUyEO4PnAw6QTxVQSIeJosyIlS506sJY/pDSpcZoDIT
VGaiyyxQmQUqs4UuX1OazAWVuaAyD13mf1dqYi14TukiNFkEKouFJqCyBE2W
gsoyoQmoLEeTFaCyYmasutj/M+lyY0RdQh5dbGBUNQlKWibqIXWxPmNN5hFx
rCmjFDVCnWn3a2XEgJoZKDQDamY+phSaBTWzoWY2Cs2BmjlQMxeF5n1LqwM1
85+V6lgLv68UWizUgZolqLN0vFYHapajzoqpSp2VMyxr1Sxz6X1ffOjImwS+
4GyC1NmPkGdBjU12tVg6ydrqKGbktz3iiD5EqPPJsDZiQM9M6JmFPrOgZ/aT
Sp850DP3a1ob6Jn/baXNAuhZCD2LSLiLn1f6LEGbpWOVNsugZznarJistFkJ
PavQZvVMxsjok+ToEzHhBHz8DFEoKBVKkOpMHSXVsabdp/AJSIHukPLMBJ+Z
4DNLSAQ+s7+iJJoDPnPBZx74zBfygM8C8FmIPIvAZ9FzUh5rCUln6Wgl0zLw
WS7kmajkWQk+q4Q805U8a5BnzeyRUEjekvRFh6CIySdo779cKdnOO2AoJJqi
h1+k6aKFmSF1mil0AqNZ6DQbjGaD0Rw0motG89BoPhjNB6MFaLQQjBY9ozRa
DEZLwGgpGi1jiS0bo3RaDkYr0GklGK0SGoHRajRaA0Zr0WjtbMackdApwdHJ
RdKQlRZwb2bkEzREckwW354iHqaKPC30+ZRQx5ohBgIJeWaB0WwtzxwwmgtG
81hl859W8ixAnoVgtEjIA0aLwWgJ8iwV8oDRMnL0clbZirFKopXIswqMVoHR
aiRaA0ZrhTxgtA551s2xrPVzR0KikEkiw2IbsgmIrJR1tzVVEzWNMf0+y9Fr
JnrNQq/ZQi+QmsOym4te89BrvtALpBaA1EKW3SKhF0gtRq8l6LUUpJay7Jah
13KQWgFSK8lKK8cpzYReq0FqjdALpNaC1Do0Ww9S69Fsw1zGvBHJUPLNJuHz
18FIRS4WrqzPSbWkUlotRynGbNSag1pzUGsuhM2DsPkswPkswAWotRC1FkHY
YghbjFpLIGzpM0qtZRC2HMJWCLUgbCWErSJJrRqvFFsj1IKwtai1DsLWC7Ug
bINQC8I2otjG+fEKpq5fhjxPjyBXwLypCDgdEitYa6WSlBBK0iekutuagVgz
79dCMeZoseYy5iHWfCEWeC0Ar4XgtYjluFiLtQSxlgqxwGsZeC1HrBXgtQK8
ViLWKsRaDV6ryVZrJijB1iLWuilaLPDagFgbwWsjYm1CrE3gtXk+Y6G58x5W
Nf9NUXaG90sW9EimamCSUwMjSMbj55VkjFn3a8m0bFIyGJsvZGNVLkC2hci2
CNkWw9liOFvCqlzKqlyGbMuQbTmyrXhWybYS2VbB2erRSrY1cLaWLLZ2opJO
yLYezjYg28YZSrZNcLYZ2TZr2bYsYLxz6cT1+jBtAee8JBXPtzidwujpq77s
EU7INoMxE+JmIdzs+12iMeYh3HyEWyAGwi2EuUUs0EVPKuGWINxShFsGc8tg
bjnCrXhGCbcS5laxQFcL4WBuDcytRbh1MLeOdLZ+khJvgxBumhJuE8xtFsLB
3BbE24JwWxFuK8JtXfSOxLPffXFvRO7UUnWpplqJ+4bg5qjGmMWYjXJztHJS
Ncb8h5RqC8UAu0UotxjlFoPdErBbympd9jWl3HKUWwF2K1FuJditQrnVYLca
7Nag3FqwWzdWKbce7Naj3obJSr2NqLcJ7DYL5cBuC8ptRbmtYLcN5bah3DaU
2774usT7shc1VQced1AzYBZdLTibzZgzSik29wGtFmPBQy61GIuFYizUJSi2
FMWWwdsyeFsObytYqCuFYvC2CsVWP6sUWwNva+FtnVAM3tbD2wYU24BiGykI
G6co1TbB22Z424JqW2crxbYJxeBtO6ptR7EdixlL4mZumlc266vO2RVXVxa7
cKP04nQJN1cMkJv3gEs4LZ4UjrGExboE8ZaC3LInlXjLEW8F4q0EuVUgtwrx
ViPeGsRbA3JrEW8dyK0DufWItwHxNoLcRsTbhHibKBCbpyoBt4DcViEeyG0D
ue0IuB3xdiDeDpDbgYA7EW/n0nj1m+rop29feFEPW0LVsb33eiUMSA1DUsV5
qDgfDBc8yLeFhHdbix4OC7hUDERchojLEXE5FK5g3a5k3a7SIq5GxDXPKBHX
IuK655SI6xFxAxRuHKtE3ASFmxFxMyJuoVxsmaaE3AqF2xBx+2wl4g4o3ImI
OxFxJyLugsJdCLl7WdwkTnE6E3VfVaLnPJ+LRFVib4xpFQeklrcMAXIeYz5j
AXIufEABuYixGD2XPMKvCTE/bS1jUS8XcrKoVyDnSuRcBZer4HI1i3oNi3ot
cq6Fy3XIuR451yPnBhb1RiEnXG6Cy83IuQUutyDnVuTcShrcNl1Jun2mknMH
XO4UcsLlLiTdhZy7kXO3kHOpZaUsi1dR+S6he7wFBFkjLG7VGD8ZW2JMHrrG
HUkZCyF1EbIuelBLylj6iEJ0GWM5uq4A1RXouhJdV31V6boaXdeA6lpQXQeq
69B1/bNK1w2s941CV1DdhK6bQXXLeKXr1klK121CV5Lldq3tDlDdKXQF1V3o
uhtdd4NqCtqmoGsKuu4B1T3LjZ31eyNrKz/P/m6vtqqzSfQI61r2qot+KiZx
ZydHEZexSAgMu4sReAncLtUCO+IyViLwSgReRS5YjcCrgXcNuWAtAq/TAq8H
3g0IvAF4NyLwJuDdhMCbgXeLFngr8G5D4G3Aux2RtyPwDhLqjhlK5J3AuwuB
dwNvCgKnaIH3AO8eRN6LwHuXM1aYN3xRVJ4oHj9t6B9ddyYk+M/nus5b3hiT
0ORYHh80C81YLAaCL4HopYi9DLGXIfbyR7XQjFWIvYpMsRqx10D0GsReK8SG
6HVkivVkig2IvRGxNyL2pueU2JsheosQG6K3kim2IfZ2iN6O2DsQewdE70Ts
nSTeXTOV4LshOkWIDdF7EHsPYu9F7L1CbIhORexUxE5bGbfg8s9T3xVpe+i6
tpDoP5Hl3UjfEFXwOeJpc5PF3smtd0AqPsrRfAmaLwXyZUC+DN2Xo/mKR7Xe
WvPVaL5Ga74WzdeRRdah+Xo03wDkG4F8I1lkE5pvRvPNaL4FzbcC+VY03wbk
28crzXcA+U4034nmu4B8F5rvJjvvnqV0TwHyPWi+F8j3onsqmqeieSqapwF5
2nKlefqquHWXf1D9Dq/uPtBdJ6ET/adYbcwDUvabPcIbxJfaz0tWygek9g94
aF/CWMpYhvrLoX456q+A+pWPupRnrEH9taSYtai/jhSzHvXXo/4GUsxGrf4m
1N8M9VtQfwspZqtWfxvUbxfqQ/0OqN+J+rugfhfq70b93dOV+ink8JTZyoG9
UL8XB1KF+lCfhgNpqJ+O+umonw71GTiQsTpeA8aJx094b+QMeK+9h89Nqksk
if5zSHaiCUj9b/agH9EBxoJkm/0HhzrAGljOWIELK1gHK3Fh1SPKBekAYy0u
rMOFdayD9biwARc2kHs2ChdYB5vIPZvJPVuEC6yDrbiwjXWwDRe2axd24MJO
1sGuicqF3VOUCym4kMI62IMLe0j0e+coJ1JxIY11kIYL6biQzjpIx4kMXMjA
hUxcyGQdZK6Oey2MFY8fi7QWgobTxOrSZqLjgy/pq/MtN3u7lyheLJR+CCce
Cueh+1xeiMHKWIkfq1gZq/Fj9aPaC8Y6/FiPH+vxYwN+bCQvbcSPTayMTfix
GT+2sDK2sjK24sc2VsZ2/NjOytiBHzvISzvxY5f2YzcrIwU/UlgZe/BjD37s
ZWXsxZNUakHqXOWJ8COdlZGBHxn4kYEfmayMzOXKjyz8yMKP7DXxWjJGPH7Y
WR3hmzlN6Sl8yjAoHUn0XtwI14WAdCRoqMVPGT1ZxFicHGF9MFaKgS+rWCur
8WUNa2UNvqx9THuifdmALxufUr5sYq1sxpfN+LKFjLVV+7KNtbJd+7IDX3ay
Vnbiy66xypfdZKwUfNnDWtmDL3tZK3vxJhVfUvEljbWSRr1In6e8yRC+sFYy
8SYTX7LwJQtfslgr2XiTjS85axhr414vo8XjByPen+o9PxkM56+gp3oE3FdX
ksWW01e9A9Kj93pWTTSXliS7XBIbWWHTA45RqxirMWvNg8qotSyidRi1/nFl
1AaM2ohRmzBqE0ZtxqgtGLWFpLYVo7axiLaR1LZj1A6M2kFS24lRuzBqF4to
N0btZhGlYNSeicqovSyiVIxKxag0FlEaRqVjVDqLKIPSkkFSy1ygDMvCqCwW
URZmZWNUNkblYFQOiygHs3IxKnddHF7J/74o/vV+x6sEb5lx9VfeC4VOjgt6
ak3YLlVyQv5uKyDd+oYny0Xza2my45e1nLFilOU1jLEG09aywtaywtZh3HpW
2AZM24BpGzFtE6ZtxrTNZL4tmLaVzLcV07Z9U5m2HdN2sMJ2kPl2Ytqu55Vp
uzEtBdNSMG3PeGXaXlZYqjCNFZamTUufqUzLEKaxwjKVaVbWQmVcNqZlY1oO
KywH03IxLRfTcjEtjxWWh3F564dfZfINYNKv93hvrPUlvpDvXhu1+3CyX9CT
/cJmqaIU8rdnKv/d5FlZUdwKWMuSxR9QsM1aOcpnFmMtYx2GrWOlrcewDay0
Day0jZi2CcM2Y9gWDNuCYVtZadswbBuGbcew7Ri2g5S4E8N2stJ2sdJ2Y9hu
VloKhu0hJe7BsL0YtpeVlophaay0NAxLZ6WlY1gGhmWw0jIxLBPDslhpWRiW
TUrMXqRMy8GwXAzLZaXlYloehuVhWD6G5WNY/jrLKtgQb2Z8Xjze4s2MwUh3
0Nn3kppugAnqmzzsAqaLWDBcxUIRNzjJniYvWWxY/UtumfzZ8mRxrtp2cdUo
g4uM9Sy/9Ti5geW3ESc3svw24eRmlt8W7eRWnNymndxOztyBkzvImTtxchdO
7sLJ3TiZgpMpOLnnReXkXpZfKk6m4mSadjKd5ZeBkxksv0yczMTJLJZfFk5m
42Q2yy8HN3MobrmLlZt5OJmHk3k4mc/yy9dOFuBkAU4WsvwKN8Zd6L4vHm90
7Ez0FjpTjx7wJc3J8qsp0i+7EdFlLihsDEgXE4zdYUDamOhZiS4jA9LJBOml
cHIFY2Wy8jFgrebxEa+P2ssNrMyNeLmJlbkJLzezMrcIL1mZW/FyG15ux8vt
pNIdeLmTlbkTL3cJL0mlu/EyhVSaQirdg5d78XIvKzMVL9NYmWl4mU4qTcfL
DLzMxMtMvMxiZWbhZTZeZrMyc/AyBy9z8TIXL/Oof3lLlJ/5eJmPlwV4WcDK
LMDLQrwsxMsivCzCy6JN8dr5nHhMNLzbyfCmBVMtDHlq4RTx7QiVcKb42Sxp
j6nnD0hPE709pj/HJnhdZayWzq4ZJf6qkO2q7ewGxkac3cRK3Yyzm1mpW3B2
Kyt1K85uY6Vux9kdYuDsTpzdhbO7cHY3OXc3zqawUvfg7B6c3ctKTcXZVJxN
086ms1IzcDaDlZopnCXnZuFsNs5ms1JzcDYHZ3NZqbna2byFytl8imT+UuVu
Ac4W4mwhzhayUotwtghni3G2eANjk2WVbI57tX7PsTfRu2cIRiyd7lt24yyd
s8TrzpY+RdheS4s9zWk4+6rkm+C1l7FGWrx2lCix60bpRWvby+LdxNgsLGYB
b8HirSzgbVi8jQW8HYt3sIB3snh3YvGurymLd5OMU7A4hQW8B4v3YvFeknGq
sJgFnIbF6STjdCzO0BZnYnEWCzgLi7OnKYtzhMUs4FxtcR4LOA+L87E4nwVc
gMUFlNXCZcpmYXERFhdhcTELuFhbXILFJSzgUiwu3RKvy/IT1oOOy+HNR4Lx
5ohod+HYF/3VGcSgJ0HLSstrmrbwgXC5Dfm724B0POiptmo93+xZzx7TGWvF
wHBpuoRAWP6ItfE+bTpjC+t7C+ZvZX1vw/jtrO/tGL+D9b1TGM/a3oX5uzF+
N+s7BeP3YPwejN+L8alk7lSMT2N9p2F8Ous7A+MzWN+ZGJ9J5s7C+GyMz8b4
HIzPwfhcjM/F+DyMz8P4fIzPx/gCjC/A+EKML8T4Iqpw0XJlfjHGF2N8CcaX
sL5LML4U40sxvoz1XYb5ZVuM75Z8T2Tz9d+s8mxkfLU4FHY76HE7GLY65DlZ
bNdiXtNzNUQnbml0QPoc8nfGAelz0NBX3exZ2n6n1yWHnd4g3RY+P2pt4nEz
YwtubxUDt7ex1Lez1Lfj+A6W+k7c3sVS34Xbu3E7BbdTcHsPbu8lm+/F7dRn
lNtpuJ2O2+m4naHdzsTtLNzOwu1s3M7B7RyyeS5u55LN83A7D7fzyeb5uF2A
2wVk80LcLsTtIrJ5EW4X43Yxdbp4hXK8RLtdituluF2G22Xa7XLcLt/C2Gp+
g2wUy59RWX24d1Emh6/IhMw33AVNpxp00Q4a2jA7q0vrVS8W8u+KAtL5oOP9
cvl84XySZ4X7vQ9Y62V1EN5vZGwSw/Ze3MstzH/I2saC3479O1jwO7B/Jwt+
Fwt+NwjsZsGnYP8eMv0e7N9Lpk/F/lTsT8P+NOxPJ9NnYH8G9mdifyaZPgv7
s8n02difM1HZn4v9edifh/352J+P/QXYX8CCL8T+QuwvYsEXYX8x9hez4Euw
vwT7S1Zg90qFQCn2l2F/GZm+HPvLsb8c+yuwvwL7K7C/Ylu8BHzHISC8Gza9
0cLUipvqukr0CX4GJAL+rm1IP65at5B/a6ya8aCnGQ9IBJI8i98NwXr5nA0S
BBuCzaMcCKytAoRtgPCwtR0QdpALdgLCTnLBLkDYrUFIAYQ9gLAXEPYCQiog
pAFCGpk/HRDSASEDEDIBIfN5AACELEDIBoQcQMgBhFxAyAWEPEDIB4R8QCgg
8xcAQiEgFAJCESAUAUIxIBQDQgkglABCKSCUAkIpIJRR8stWKRjKAaEcECrI
BRWAUAEIlYBQCQiVgFC5zbKqtsedD+QH3yYY+vfopd/V5YX8p4eDvg7eff4x
4OvxhrTxqtELmc+TBD01PyBRCHqyQUCikChhEChs1EPDELC2jBJ/ahAWrG2M
7fersQMgdmogdgHEboBIAYgUgNgDEHspDqkAkQoQaRqIdIDIAIgMWoFMgMii
OGQBRDZAZANEjgYil+KQBxB5FId8AQStQAFAFAJEIUAUAUSRAILiUKyBKFmo
gCgVQFAcygCiDCDKAaKcVqB8tYKiQgNRSXaoBIgqgKgCiCqAqAaIaoCo3nFd
TITfDWF607LnrbueqwVDcAi3/P4zLe5TZqr/S/T0f0M6gxs9ncGQnbpODAFJ
Q6InMbh4CFib5I9FbhA0bB1luXkIWDvuF73DTpDYBRK7QGI3SKSAxB76hT0g
sRckUjUSafQL6SCRTr+QARKZFIxMkMgCiWyQyAaJHApGDkjk0i/kgkQeSOSD
RD5IFIBEAUgUgkQRSBRRMIpBohgkikGihDxRAhKlIFFKnigDiTKQKCdPlINE
BUhUgEQF/ULlWoVFJUhUgUQVeaIaJKpBohokakCiBiRqdjB2xp0rvqVyhWcf
aLo8EfDWC+f9Q8mW/6RNrJ1ioqdTHNIx3OjpGExMrJGvt1a+lM3EBleO2CRe
anOy2CTbTGxz5QiBxE4xBBSM3YCxm04iBTD2AMZewNgLGKk0kmmAkQYY6YCR
ARgZgJEJGFmAkQUY2c8qMHIAIxcwcgEjDzDyACNfgEEBKQCMQgpIIWAUTVNg
FANGCWCUAEYJYJQCRilglAFGGWCUA0Y5YFQARgVgVAJGJWBUAkYVnUTVOgVH
NWBUCzDIFzWAUQMYtYBRCxi1gFELGLW74mXjm+LRf4LWcGu9r5cImHYR7suL
6oxeyA+Hf7uo8VDVIynSaQJXQ5lg3DJGLB+MzeLlt8gf23hs10PjEZBsPG7t
5jEFQlIgZA+E7H1UEZIKIWkQkg4h6RCSASGZEJIJIVlUlGwIyYaQHAjJgZBc
Wow8CMmDkHwIyYeQAggpgJBCCCmCkCIIKYaQYggpgZBSKkophJRCSBmElFFR
yiGkHEIqqCgVEFIJIZVUlCoIqYKQKgiphpBqWozq9YqSGgipgZBaCKmFkDoI
qYOQOgipg5C6XZZVvzvuFPINBxPfZtO36fC3nN6q4uw8Eox3yhg7DfelM9V1
JphOA0dpPROM+05n7+FCReMiaGHvIX+8bZRGJYyLoCUgYXlC4rJHDJDZCzKp
IJMKMmkgkw4yGSCTQVeaCTJZIJMFMtkamRyakFyQyQWZPJDJB5l8mpACkCmg
CSkEmUKQKZqokCmm4pSATAkVp1QjUwYyZSBTDjLlIFNBYqkAmUqQqSSxVIFM
FchUk1iqQaYaZGpApgZkamhCajYobGpBpo6KU6eRqQeZepCpB5l6kGkAmYaU
eKn5ujpJZScX3y09sZ6A9G9UrgOZYc4xm/rThCHEeDYqLlo0MQIYNirJ4rrv
9mRFzE6bGIbMLjrDCGT2igE2qWCTBjZpYJNO75qhsckEmyywyaZ3zQabHLDJ
AZtcsMkDmzwalXywKaAeFYBNIdgUgk0R2BSBTTHYFINNCdiUgk0p2JSBTRnY
lFOPysGmAmwqwKYSbCrBpgpsqjQ21RqbGrCpAZtasKkFm1qwqaVRqduo0KkH
m3qyTT3YNIBNA9g0gE0D2DSCTWMKY0/cGedrqpkd+oFKQz9I4PpPXStyEiNd
p4/p7HXQ07QEJDYJQ8DZIH+2Ub6cK83Y4AhuAhKbRGsHjztHKWhc4AQkNU9K
blIfUiMNdtJhJx12MmAnE3YyaXKzYCcbdnJgJwd2cmEnF3byYCefSpUPOwWa
nULYKaJSFcFOMZWqGHZKYKcEdkoFO1SqMtgpp1KVw04F7FTATiXsVMJOFexU
LVTsVMNONZWqBnZqYKeWSlULO3WwUwc7dbBTDzv19DL1mxQ/DbDTQNpphJ1G
2GmEnUbYaYKdJthpgp2mvfHi81eqYA17h4e9/wm4rlHaV5pd5EQ5A87PTLd4
KHaChhqV5KlR5l1QwhB4Nsqf6S2QCxwNj2AnINFJsHbyuAuAdt8XzjqKnq86
9KSJwRYpHYIyICgDgjIhKAuCsiAoG4Jy6HVyISgXgvIgKA+C8iGoAIIKIKiQ
wlUIQUUQVAxBxRBUAkElEFQKQaX0OmUQVAZB5RBUAUEVEFQJQZUQVAVBVRBU
DUHVEFQNQTUQVANBtWSgWgiqg6A6MlA9BNVDUD0ENUBQAwQ1ULQaNiuKGiGo
iQzUBEFNENQEQc0Q1AxBzRDUvNeyWlLjpehphyLTPZCmOxZi5mjozXdJUW8+
UTvppKg7aVW5box4ms3d66htU6I7AdkcCYwCkqIEaxePu2EpBZZSSEZ7JEuC
oqcdjtLFgKUMWMqEpUxYyoKlbJqgbFjKgaVczVIeLOXDUj4sFcBSISwVwlIR
LBXBUjFNUAkslcBSKSyVwlIZLJXBUjkslcNSxTTFUiXVrAqWqmiCqmGpGpZq
YKkGlmqoZrWwVAtLdbBUB0v1sFQPSw2w1ABLDbDUCEuNsNRI39xIJWvaonhq
hqVmMlIzLLXAUgsstcBSCyy1wFJrKiMt7qr2VdURRQIqwmd4RMQpMdJ9zmqf
lRTptIxkSe3Bk6LuwVU5u9F7xcZA02b5XL3LcpGkaRIwBSRLN1q7eUxh7IGo
PRC1F6JSXVlJ0BSwMh4WtS4TorIgKguisiEqB6JyICoXovIgKg+i8mmrCyCq
gL16IUQVQVQRRBVDVDFElUBUKUSV0h+VQVQZ/VE5RJVDVAVEVUBUJURVQlQV
RFVDVDVE1UBUDUTVQlQtRNVCVB1E1UFUPUTVU+MaIKoBohqpcY0Q1QhRTRDV
BFFNENVEhmqmvjWTnSBKUtICUa0Q1QpRrRDVClGtENUGUW0Q1ZYeL1RPqVbJ
02FH+9iTiDkqwslffYXfcyWI7/lu25YseW5o9GUotRtLjHQhQG3IEoZgtUX+
qt6NuZDSWAmqAhKqZxRWjL0krL2glQpaaQ+GsRJQZYohsGJkg1Y2aOWAVi5o
5YJWHq13Pmjlg1YBaBWCViFoFYFWMWgVg1YJaJXQPpWCVhnFrwy0ykGrHLQq
QKsCtCppnypBqwq0qih+1QItil8NaNVS/GpBqw606kCrDrTqQasetBpAqwG0
GklYjaDVBFpNJKwm0GoGrWbQagatZtBqIWG1gFYLyap1u8KrDbTaQKsNtNpA
qw202kGrHbTa0xkZ8eL1pINXbDkrYL5pb/gCGIz/7qBYrywkmc4c+vAKevBS
BfD7qgDqlOXwxUiFsVRSWBqMpT/o5SvrYc0XIwfGcmAsF8byYCwPxvJhrADG
CmjRC2GsCMaKYKwYxkpgrITtXSmMlcJYmWasHMYqKIoVMFZJUayEsSoYq4Kx
ahirhrEaGKuBsVoYq4OxOhirh7F6GKuHsQYarAYYa4SxRs1Yk2asGcaaSWEt
MNYCYy0w1gJjrTDWSgprhbE2CmLbDsVZO5y1w1k7nLXDWQecdcBZB5x1ZDAy
zX9U5ZbIoH1FFccIbzZxve/H916TqLkrKeqN87GfeIzlSnaS6eSj02GpkwNB
d03URTEYLorye4KvG6xUHtOgLA3K0slmGVCW8ZBDWEDi9bQELFcMIMsDsnwg
yweyAg1ZIZAVAVkxkBUDWQmQlQJZKZCVAVkZkJUDWTmQVQBZJZBVAlkVkFUB
WTWQVVMna4CsBshqgawWyOpmK8jqqZMNQNYAZA1A1ghkjUDWBGRNQNYEZM3U
yWYgawGyFiBrJZm1AlkrkLUCWRuQtQFZG5C1A1k7XXz7TgVaB5B1AFkHkO0D
sn1Atg/I9pHM9gHa/vhBe8IBzVUrkyK9szJ8KiHaSahoV8s5wtBWPjFSoVR1
Mhj/NZCgp5lXpxOC7jqpC2XQk8gCErRnrTQe08UAuQxwyySxZT6kkplMZDqZ
CdbyxIC3fHgrgLcCeCuEt0J4K4K3YngrodMvgbdSeCuDtzJ4K4e3cnireJ4B
b5X0ZVXwVgVv1fBWDW818FYDb7XwVgtvdfRldfBWD2/18NYAb43w1ghvjfDW
BG9NFM9meGuGt2Z4a4G3FhJbK7y1wlsbvLXBWxu8tcFbO7y1w1s7xbMD3jrg
rYO+bN8uxdw+eNsHb/vhbT+87Ye3/fB2AN4OwNuBrOtCznQxNtJH04XM76YL
+evnsFfmOejQrj8xUtcf18X5ZNfVlaCn71enIoIOeLvl91Lk95wKKr8nsPue
BC9DDODLJN9lAV82+S77YQVe7iNh8PIfAzjgKwC+QuArBL4i4CsCvmLgK9Hw
lQJfGdvMcuArB74K4KsAvkrgqwS+KuCrBr5qOrca4Kuhc6sFvlrgqwO+OuCr
B7564GsAvgaqaiPwNVFVm4CvCfiaga8Z+FqArwX4WoCvFfhaga8N+NqArx34
2qmq7cDXAXwdwNcBfB3At4+Etw/49gHffirq/t0KwP3AdwD4DgDfAeA7AHwH
ge8g8B3MYmTHnPTs/8k/Pxz1g8Zu8N/Y7X8zeSBcVqNlu2Hu1Y/l/FdSpLsA
jOcu3OQ55y6CntYtILELOuClye+ly6gFeJmMLODLAr5ssl8O8OU8JMELSOq+
rrhjFMJeIewVwV4R7BXDXjHslcBeKbuGUtgrg71y2KuAvQrYq4S9Stirgr0q
2KuGvRqKbQ3s1cJeLezVwV4d7NXT0dXDXgPsNcBeI+w1wl6TZq8Z9pphrwX2
WmCvlWLbCnutsNcGe22w106xbYe9DtjrgL0Okt8+2NsHe/tgbx/s7Ye9/SS/
/bB3APYOUGgPpCj+DsLeQdg7CHsHYe8Q7B2CvUOwdwj2DuXEmwAf0/i5P4/H
8BF37qQXcN2C7K21IT99ak+aYDzXEfnu1MRI9yGrchuM/+x9klNu3ZnP29kF
HQDT5fcEft9XADKyxQDCHCDMJQvmAmEeWTDfznyCQEYRFBZBYTEUFkNhCRSW
QmEpFJZBYRkUlkNhhaawEgqr2LtWQWE1FFZDYQ0U1kJhLRTWUYLroLCeElwP
hQ1Q2ACFjVDYSMvXBIVNUNgMhc1Q2EIJboHCVihshcI2KGyDwjYobIfCdijs
gMKONYrCfVC4Dwr3kwX3Q+F+KNwPhQeg8AAUHiALHoTCg1B4kPJ7aI8i8RAU
HoLCQ1B4GAoPQ+FhKDwMhYdzLOtIbtzt36NqQxvhfUr+2+Cny+8Nc7sLPzOd
uFWnRRIjnRZRO4vESDsLVXeD8V8CSHLo8xMYbviCDoEZ8nuCv+cdAnPEIB3m
QmEeFOaRDvOhsOARL4HFYkBhCRSWQGEpFJZBYRkUlkNhORRWsPGohMJKKKyC
wmoorIbCGiisgcJaTWEdFNZDYT0UNkBhAxQ2QmEjtbgJCpugsBkKm6GwhUaw
BQpbobAVCtugsA0K26GwnVrcDoUdUNgBhfugcB8U7oPC/VC4HwoPQOEB8uEB
KDwAhQeh8CAUHoTCQ1B4CAoPQeFh6vDhvYrEw1B4GAqPQOERKDwChUeg8AgU
HoXCo3nxgviIbgrdt2i77qxJHHLblWdnm2Dc2fpv0fbciJcY6fJBTOfmgoYi
bNpzhPxJUG07Qt7zJ8m6+Qs6EGbKV8iSINoQ5ooBiHmkxHxAzAfEAlJiISAW
PhqGsEQMQCwFxFJALAPEckAsB8QKQKwAxEpArALEKnYk1YBYA4g1gFgLiLXs
gOsAsQ4Q6wGxARAbKMyNgNgIiE2A2ASIzYDYDIgtFOYWQGwFxFZAbAPENgpz
OyC2A2IHIHYAYgcg7gPEfYC4HxD3A+J+CvMBQDwAiAcB8SAgHgTEg4B4CBAP
AeIhQDxMYT4MiIc1iEcoykdSFYxHAPEoIB4FxKOAeBQQjwLiMUA8lmf8c9TD
gRj5tHBipA+1UeftQv4LoMPfp5MYqQdUFxwSw28GSvZccFBFOGg4e5dgPDms
zq8keXKge/8RbgOD4TZQfk8AeIuDYJ4YYJgPhgXkxAIwLATDInJiERgWPyYR
DFilT4hrQmVQWAaF5VBYAYUVUFgJhZVQWAWF1VBYDYU1UFgLhbVQWAeFdVBY
D4X1UNgAhY1Q2AiFTVDYRHvYDIXNUNgChS1Q2AqFrVDYBoVtFOZ2KGyHwg4o
7IDCfVC4Dwr3UZj3Q+F+KDwAhQeg8AAUHoTCg1B4CAoPQeEhCvMhKDwMhYeh
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
c6CfE/Tzgn4B9AsKPUV+EfSLoF8U9EugXwL9kqBfpsgvC/oV0K+AfgX0K6Bf
MaFfBf0q6FdBvyro10C/Bvo10K+Bfg30a6Bfq4F+HfTrqsCvd6jf7euYX8f7
ereMHuNnolcBWcP8GubXBozxCrD/AR34pQpfV1HhrS+nxD8MdpapF6XDF7E/
Wlym/p7hvfcxiXcRPyDibYi3i3gH4p0i3mUS7zGJ9yHebxIfRHzIJD7yrrL4
GOLjIj5RFE+nT5nEZ0zic79eFj9YFE/FGTKJH1HiifpRxI+J+PEva/ETSjyd
flLETynxRP20iJ+h4syI+FkRPyfi5xE/r8RTcRZE/CLiF0X8EuKXEL+kxFNx
lhG/jPhlEb9C1K9UiV9F/CriVxG/ahK/hvg1xK/VEL+O+HXEryN+HfHriF9H
/Hq1+AuWDcRvIH7DJH69V326T0FZB/w64Ndtxnjl0N8z3M+710PNC4nP2His
r96X0T2+XlcaGR2qzijxFwzzpUpTNm81wH/JIG8zkXeYyLuEvNtE3qvIvxXy
P6fJB4rk36nJh03ko79SST7xfk0+WSRP0KeL5Gk32U+Uyec/VSZfKJIn6IdN
5EcV+c9r8uNCfuJJTX5SkSfop4T8tCJP0M8I+VmCfhbyc5CfU+RpN/NCfgHy
C4o8Qb8o5Jcgv/Tnmvwy5Jchv6zIE/QrkF+B/IqQXyXoVyG/CvlVE/k1yK9B
fg3yayby65Bfh/w65Nchv34G+Q3Ib0B+A/Ib7crJRoeyYzbPYz0q+jbI+A3I
b/TLGDA+ZzM+Zy/zPW8b597qixVe33eqruK+U/d8s9RqYK8vnWAr3M9r76U1
a6V1g7rVoN5Qwt5rCvhq7XaTdqdJu1u0e0zafUXtb9Pag0XthHwY8RGT9hgh
H3tPWXvyA1p7qqidkM+YtOd+rax98NNl7UNF7YT8iEn7mNL+Ba19QrRPfkVr
n1LaCflp0T4j2mdF+9wfae3zaJ9X2gn5BdG+iPZFpZ2QXxLty2hf/h9a+wra
V9C+orQT8qtoX0X7qmhfQ/sa2tfQvob2NZP2dbSvo30d7esm7Rto30D7Bto3
0L6B9g20b6B9o6b2TUP7Jto30b5paN/sUSG3ifZNtG/2y0D7pk192o6kl53x
r5M+X7vO8AnzzYitpdsRP8z7SnUV8a6XrP+otGQtuu+4WFlquk0hb5h/rFxq
rJaBx9VFoTbs27HvwL7jTdq9q4Z7r8m9v+j+7dp9yOyepI+a3MeV+/ea3JP0
Keyni+5J+qzJff6TZfcFkr7wGe1+uOiepB81uR9X7r+o3U+K+ylxP63ck/Qz
4n7269r9nLif/2PtfgH3C8o9Sb8o7pdwv6Tck/TL4n4F9yt/od2v4n4V96vi
fg33a7hfU+4pN+u4X8f9Ou7Xcb+O+3WT+w3cb+B+A/cbZ7jfxP0m7jdxv4n7
TdxvGuvXzXaVaUp+0f0W7reMHr/Vqz63hfstzG8NyLAZn7MbPyuOMuJXYEfn
dTr1z9izOfP2r7rj1FefgW4tnx9TX3l+jHq42Xi4tCuv8VsN/Q2G/06zf2PP
ssfYv7mr1DNsapj8O5V/st/Fz4CbnwE3PwMek3+fyX8A/0Hl/+e1/7DZP9kf
M/lPKP/v0/5TRf9kf6bon+zPmfwP/nrZ/5Dy/4T2P1L0T/aP/U7Z/4Ty/yXt
f0r5p+lMi/8Z5Z/snxX/c9+o9L/wLe1/Ef+Lyj/ZvyT+l/G/rPyT/SvifxX/
q3+p/a/hfw3/a3+t/a/jfx3/68r/05X+N/C/gf8N/G+Y/G/ifxP/m/jfxP8m
/jfxv1nD/xb+twz/W+0q37fwv4X/LZP/bdXqt/sUh234b0N/2ybDbnypQ2nc
cv59/AicV3fumf0Ps5itL+e+sn/xPurOFzV9xb6KvquaPvHvhb8X/j74+3+2
kn5I0X+Hph8x0yf+4yb6SUX//Zp+ukif+M8W6RP/eRP9wqfK9IcV/d/U9EdN
9Mc/V6Y/qeh/WdOfVvSJ/xmhP6voE/9zRfrE/zz0F4T+4p9o+kvQX1L0if9l
ob8C/RVFn/hfFfpr0F8z0V+H/vp3yvQ3oL8B/Q3ifwP6Gyb6m9DfhP4m9DdN
9LegvwX9LehvQX8L+lvQ34L+FvS3NH2rYf+1hv1t5G8jfxv528jf1vIN+Dtq
QH/H6PY7RrdX9LeBv+2U4bK8Yg3ItHlT4w7J5ag/91TIctQ33kfUP1Lkbozq
qmM1xD9ZEfVm844q824x7zGZ95nMB95aaT6szL9Tm4+azRP5CZP5lDL/AW0+
UzRP5OeK5on8QZP5oU+XzY8o8/9Jmx8zmZ/4fNn8lDL/pDY/o8wT+bNifk6Z
/5o2P6/M/6E2vyjml/5Um1/G/LIyT+SviPlVzK8q80T+mphfp/KsY35dzG9g
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
gvZJkfaJQfukgvapQfsU2qdC+9+V3pT50YegbbrcRjY/Xqkq0lCqIv0yBoxX
shkrSCOuy5FtNWD/k3IVMSW2oh2ooh2uQTtuop38+TLtdJm2Dt2PWoZpHSME
86iE8hihPE7rGCeYJ2gdk6ieUqo/o1XPFFXTOuaKqj+vVS8WVRPay6J6Ran+
L1r1mlL9Na16Q1Rv/pFWvaVU/6lWvSOqd/+7Vn1bqSa090T1vlJNaB+I6kNC
+1BUH9FGjkT1sag+QfUJqk9QfYLqE9rICapPUH2C6hNUn6D6BNUnqD5B9Qmq
T1B9guoTVJ+g+gTVJ6g+QfUJqk9QfYLqE1SfoPoE1SeoPkH1CapPUH1iVJET
433xE1iflFkbqq2G6jrD9SmulWqrobrOcH0a1UwfL8X2v3ww28UL0+5qHmet
E894N7zWDohhW1lWku2PWkqWrUZKf5/FxUf3G/Q4C3OwCnOkBubE24pZ+2lL
jkzOSx4PkscFqkaBTB4ij4dVzSiKpmqMfawseqIo+lNa9LQS/YQWPVsUTVbP
I3pBif6CFr1UFE1Wr4joVSX697XodSX661r0poje+mMtehvRO3+mRe+K6Nsi
ek+JJqv3RfSBiD4siiarj0T0MVl9LKJPnjlD9KXzRZ8i+hTRpw8g+vQBRJ8i
+tQQfWqIPj1HtBpvKon+5w8m+qfVRyO/vsf4/5+wDKnp51fyMARGqqZ//OPl
6Z8sTv+n9fTPqOn/TT39c8Xp/x09/Ytq+r+op3+5OP2E2qpM/xrTv/5VPf0b
avq/oad/S6Z/+1vl6d/9tp7+22r6+VW9J9O/r6afUDuQ6T/8Kz39R0z/kUz/
sUz/CaF2ItN/SqidMv2nTP8p03/K9J8y/aeE2inTf8r0nzL9p0z/KdN/WjX9
p0z/KdN/yvSfMv2nTP8p03/K9J8y/adM/6lM/ynTf8r0nzL9p0z/qfo1fepU
G7mnzP4ps39qmn3m3mpMfUNp8u+EZUQUhDtRy0+VZv6fPdjMGxvDRg68vsYX
6m2IH7Lc4Sjc4QfhDkfhDkfhDkfhDkfhDkfhDkfhDkfhDkfhDkfhDkfhDkfh
DkfhDkfhDkfhDkfhDkfhDkfhjrpbp7qVIUfhDkfhDkfhDkfhjjoKd4yjcIej
cEedW81RuMNRuMNRuKOOwh1jK/CO2gqUo2A1jkGdOgaWOzE9/mPpYPzggx2M
nyj9GNRapD5detkfeLCXfX3pGNfahn+29LLfX+OzF85+2X9a+m5/usYXvlB6
2X/8YC/7faXv9h01vvBS6WX/4YO97GtK322tmx5cLfXM1zzYy1pL3+2Ha3zh
zdJ3+8g9XtY4ff9TNZ7UWHqJWhd0yUu8rvTtf7LGk1pKL1F1V0Mx84Olb+Cj
Z3218Vk5pe9HSg988KwjaRznf6Cf/q9K39t7z9L36jJqy4+VXv2Xazz9f6qP
ryn/htE/MvVnnVL7/5ReXa+MLRdLr/5zNZ7+p6Wn6319nU4NZxH/Wunp+lQE
y38ofTNvqfH0J0tP1+dL6pwwXv0NNZ7+2dJ/qr6qw/K20qtfrPH0T5ZeXUO0
vLP06j9e4+kfKj1do9PXSRmv/mM1nv6u0tN/Wz/9vaVXr1Ve31Z6+lf00z9U
evoP13j6W0r/qV/XT/9Y6ZuplaAXS6/+bf30T5ZevVaE/Vjp6X+un/6Z0qt/
b42n/0jp6d/RT/9s6dVfW+Pprys9/Tn99M+Xnn6hxtNfW/pPvaaf/mTpm6l1
nbK19Opt+umW/+3/A8dTaJg=\
\>"]]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"showEVContact", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"P", ",", "res", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P", "=", 
       RowBox[{"getElement", "[", 
        RowBox[{"b", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"evContact", "[", 
        RowBox[{"i", ",", "0.5", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"phiMin", "=", 
       RowBox[{"res", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"phiMax", "=", 
       RowBox[{"phiMin", "+", 
        RowBox[{"res", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"plotObst", ",", "\[IndentingNewLine]", 
          RowBox[{"plotRob", "[", 
           RowBox[{
            RowBox[{"qITr", "[", 
             RowBox[{"i", ",", "t", ",", "P", ",", "\[Phi]"}], "]"}], ",", 
            RowBox[{"qITa", "[", 
             RowBox[{"i", ",", "t", ",", "\[Phi]"}], "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "phiMin", ",", "phiMax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524398613410071*^9, 3.524398663890904*^9}, {
  3.524398718514309*^9, 3.524398804923161*^9}, {3.524398869478305*^9, 
  3.524398882593824*^9}, {3.524452133840845*^9, 3.5244521341203213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showEVContact", "[", 
  RowBox[{"4", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.524398807591014*^9, 3.524398818085137*^9}, {
  3.524398898401362*^9, 3.524398899311501*^9}, {3.524398948672056*^9, 
  3.524399031090427*^9}, {3.5244520699439363`*^9, 3.524452086997778*^9}, {
  3.524452139819071*^9, 3.5244521401383743`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, $CellContext`\[Phi]$$ = 
    2.896808593971611, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Phi]$$], 2.896808593971611, 5.176231192894178}, {
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {360., {102., 106.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Phi]$909091$$ = 0, $CellContext`t$909092$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`t$$ = 0, $CellContext`\[Phi]$$ = 
        2.896808593971611}, "ControllerVariables" :> {
        Hold[$CellContext`\[Phi]$$, $CellContext`\[Phi]$909091$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$909092$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[$CellContext`plotObst, 
        $CellContext`plotRob[
         $CellContext`qITr[
         4, $CellContext`t$$, $CellContext`P$908931, $CellContext`\[Phi]$$], 
         $CellContext`qITa[4, $CellContext`t$$, $CellContext`\[Phi]$$]]], 
      "Specifications" :> {{$CellContext`\[Phi]$$, 2.896808593971611, 
         5.176231192894178}, {$CellContext`t$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {157., 164.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5243988188934517`*^9, 3.5243988429495907`*^9}, {
   3.524398884602261*^9, 3.5243988998872147`*^9}, {3.524398949658839*^9, 
   3.5243990315446243`*^9}, 3.524451781267638*^9, 3.5244518140160437`*^9, {
   3.524452070632162*^9, 3.524452087479887*^9}, 3.524452140696739*^9, 
   3.5244608068488293`*^9, 3.527916932350177*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Playground", "Section",
 CellChangeTimes->{{3.5242859908083677`*^9, 3.524286002326415*^9}}],

Cell[CellGroupData[{

Cell["Set a Test Case", "Subsection",
 CellChangeTimes->{{3.526365620793316*^9, 3.526365626578865*^9}}],

Cell[BoxData[{
 RowBox[{"setRob", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"3", 
      RowBox[{"Pi", "/", "4"}]}], ",", 
     RowBox[{"3", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}], "\n", 
 RowBox[{"setObst", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524453761285321*^9, 3.524453799711761*^9}, {
   3.524461713478101*^9, 3.524461728556017*^9}, 3.53287958845155*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Vertex Egde contact", "Subsection",
 CellChangeTimes->{{3.532879233053218*^9, 3.532879239468462*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"phiMin", ",", "phiR"}], "}"}], "=", 
   RowBox[{"veContact", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "7"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"plotRob", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"qITr", "[", "\[IndentingNewLine]", 
             RowBox[{"1", ",", "0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "t"}], ")"}], 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "1"}], "]"}]}], "+", 
               RowBox[{"t", " ", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"1", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"qITr", "[", "\[IndentingNewLine]", 
             RowBox[{"1", ",", "0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "t"}], ")"}], 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", "1"}], "]"}]}], "+", 
               RowBox[{"t", " ", 
                RowBox[{"getElement", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"1", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}], 
            "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         ",", 
         RowBox[{"qITa", "[", 
          RowBox[{"1", ",", "0", ",", "phi"}], "]"}]}], "\[IndentingNewLine]",
         "]"}], ",", "\[IndentingNewLine]", "plotObst", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"patchVEContact", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Sphere", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"qITr", "[", "\[IndentingNewLine]", 
                RowBox[{"1", ",", "0", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], 
                   RowBox[{"getElement", "[", 
                    RowBox[{"b", ",", "1"}], "]"}]}], "+", 
                  RowBox[{"t", " ", 
                   RowBox[{"getElement", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"1", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
                "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"qITr", "[", "\[IndentingNewLine]", 
                RowBox[{"1", ",", "0", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], 
                   RowBox[{"getElement", "[", 
                    RowBox[{"b", ",", "1"}], "]"}]}], "+", 
                  RowBox[{"t", " ", 
                   RowBox[{"getElement", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"1", "+", "1"}]}], "]"}]}]}], ",", "phi"}], "]"}],
                "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"qITa", "[", 
               RowBox[{"1", ",", "0", ",", "phi"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "0.05"}], "]"}]}], "}"}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"phi", ",", "phiMin", ",", 
     RowBox[{"phiMin", "+", "phiR"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5244544518959923`*^9, 3.5244544547510633`*^9}, {
  3.532435673027692*^9, 3.532435757008437*^9}, {3.532879282451853*^9, 
  3.532879283845539*^9}, {3.5328793396654053`*^9, 3.532879431862657*^9}, {
  3.532879479051572*^9, 3.532879486730276*^9}, {3.532879550858293*^9, 
  3.532879558684367*^9}, {3.5328796047793627`*^9, 3.532879748478797*^9}, {
  3.532883754035575*^9, 3.532883780799622*^9}, {3.534062659602916*^9, 
  3.534062712282378*^9}, {3.534062743210281*^9, 3.5340627884617977`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`phi$$ = 
    4.456893606736168, $CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`phi$$], 4.456893606736168, 5.742765806909002}, {
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {745., {181., 185.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`phi$2082$$ = 0, $CellContext`t$2083$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`phi$$ = 
        4.456893606736168, $CellContext`t$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`phi$$, $CellContext`phi$2082$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$2083$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Show[
         Graphics[
          Point[{{-2, 3}, {5, 7}}]], 
         $CellContext`plotRob[{
           Part[
            $CellContext`qITr[
            1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                1] + $CellContext`t$$ $CellContext`getElement[$CellContext`b, 
                1 + 1], $CellContext`phi$$], 1], 
           Part[
            $CellContext`qITr[
            1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                1] + $CellContext`t$$ $CellContext`getElement[$CellContext`b, 
                1 + 1], $CellContext`phi$$], 2]}, 
          $CellContext`qITa[1, 0, $CellContext`phi$$]], $CellContext`plotObst,
          ImageSize -> Medium], 
        Show[
         $CellContext`patchVEContact[1, 1, {1, 0, 1}], 
         Graphics3D[{Black, 
           Sphere[{
             Part[
              $CellContext`qITr[
              1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 1], 
             Part[
              $CellContext`qITr[
              1, 0, (1 - $CellContext`t$$) \
$CellContext`getElement[$CellContext`b, 
                  1] + $CellContext`t$$ \
$CellContext`getElement[$CellContext`b, 1 + 1], $CellContext`phi$$], 2], 
             $CellContext`qITa[1, 0, $CellContext`phi$$]}, 0.05]}], PlotRange -> 
         All, ImageSize -> Medium]}, 
      "Specifications" :> {{$CellContext`phi$$, 4.456893606736168, 
         5.742765806909002}, {$CellContext`t$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{788., {237., 243.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.527842169915255*^9, 3.53243525909026*^9, 3.532435758273641*^9, 
   3.532879140108989*^9, 3.5328791838106327`*^9, 3.53287935476431*^9, 
   3.532879403719613*^9, 3.5328794344207563`*^9, 3.5328795597176228`*^9, {
   3.5328796805858917`*^9, 3.532879704045623*^9}, {3.5328797358617992`*^9, 
   3.532879749526936*^9}, {3.5328837559940643`*^9, 3.532883781873808*^9}, 
   3.5339832710273027`*^9, 3.5340567295793667`*^9, 3.534062637125556*^9, {
   3.534062674265332*^9, 3.534062712749112*^9}, {3.534062751997967*^9, 
   3.5340627888586903`*^9}, 3.534062904942075*^9, 3.534064537472653*^9, 
   3.534069340912225*^9, 3.545732302286874*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Edge-Vertex Example", "Subsection",
 CellChangeTimes->{{3.526365722249897*^9, 3.526365727919664*^9}, {
  3.532435300630609*^9, 3.5324353015184803`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"phiMin", ",", "phiR"}], "}"}], "=", 
   RowBox[{"evContact", "[", 
    RowBox[{"1", ",", "t", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "6"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"plotRob", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"qITr", "[", "\[IndentingNewLine]", 
             RowBox[{"1", ",", "t", ",", 
              RowBox[{"getElement", "[", 
               RowBox[{"b", ",", "1"}], "]"}], ",", "phi"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"qITr", "[", "\[IndentingNewLine]", 
             RowBox[{"1", ",", "t", ",", 
              RowBox[{"getElement", "[", 
               RowBox[{"b", ",", "1"}], "]"}], ",", "phi"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         ",", 
         RowBox[{"qITa", "[", 
          RowBox[{"1", ",", "t", ",", "phi"}], "]"}]}], "\[IndentingNewLine]",
         "]"}], ",", "\[IndentingNewLine]", "plotObst", ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"patchEVContact", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Black", ",", 
          RowBox[{"Sphere", "\[IndentingNewLine]", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"qITr", "[", "\[IndentingNewLine]", 
                RowBox[{"1", ",", "t", ",", 
                 RowBox[{"getElement", "[", 
                  RowBox[{"b", ",", "1"}], "]"}], ",", "phi"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"qITr", "[", "\[IndentingNewLine]", 
                RowBox[{"1", ",", "t", ",", 
                 RowBox[{"getElement", "[", 
                  RowBox[{"b", ",", "1"}], "]"}], ",", "phi"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"qITa", "[", 
               RowBox[{"1", ",", "t", ",", "phi"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
            "0.05"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
         "}"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"phi", ",", "phiMin", ",", 
     RowBox[{"phiMin", "+", "phiR"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5244544518959923`*^9, 3.5244544547510633`*^9}, {
   3.532435673027692*^9, 3.532435757008437*^9}, {3.532879282451853*^9, 
   3.532879283845539*^9}, {3.5328793396654053`*^9, 3.532879431862657*^9}, {
   3.532879479051572*^9, 3.532879486730276*^9}, {3.532879550858293*^9, 
   3.532879558684367*^9}, {3.5328796047793627`*^9, 3.532879748478797*^9}, {
   3.532883754035575*^9, 3.5328838428511057`*^9}, {3.532883927820315*^9, 
   3.532883934792132*^9}, {3.532883985568335*^9, 3.5328839857377367`*^9}, {
   3.532884247017584*^9, 3.53288428247641*^9}, {3.532884549290798*^9, 
   3.532884704890246*^9}, {3.532884795405794*^9, 3.532884813645091*^9}, {
   3.534056819634952*^9, 3.53405687114144*^9}, 3.5340569050101624`*^9, {
   3.53405700041995*^9, 3.534057000687147*^9}, {3.53405708460962*^9, 
   3.534057198267465*^9}, {3.53406096925593*^9, 3.534060970082168*^9}, {
   3.534061274628065*^9, 3.534061307102419*^9}, {3.5340628367343197`*^9, 
   3.534062862505142*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`phi$$ = 1.637051507543017, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`phi$$], 1.637051507543017, 4.456893606736168}}, 
    Typeset`size$$ = {669., {214., 218.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`phi$9158$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`phi$$ = 1.637051507543017},
       "ControllerVariables" :> {
        Hold[$CellContext`phi$$, $CellContext`phi$9158$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Show[
         Graphics[
          Point[{{2, 2}, {6, 6}}]], 
         $CellContext`plotRob[{
           Part[
            $CellContext`qITr[1, $CellContext`t, 
             $CellContext`getElement[$CellContext`b, 1], $CellContext`phi$$], 
            1], 
           Part[
            $CellContext`qITr[1, $CellContext`t, 
             $CellContext`getElement[$CellContext`b, 1], $CellContext`phi$$], 
            2]}, 
          $CellContext`qITa[
          1, $CellContext`t, $CellContext`phi$$]], $CellContext`plotObst, 
         ImageSize -> Medium], 
        Show[
         $CellContext`patchEVContact[1, 1, {1, 0, 1}], 
         Graphics3D[{Black, 
           Sphere[{
             Part[
              $CellContext`qITr[1, $CellContext`t, 
               $CellContext`getElement[$CellContext`b, 
                1], $CellContext`phi$$], 1], 
             Part[
              $CellContext`qITr[1, $CellContext`t, 
               $CellContext`getElement[$CellContext`b, 
                1], $CellContext`phi$$], 2], 
             $CellContext`qITa[1, $CellContext`t, $CellContext`phi$$]}, 
            0.05]}], PlotRange -> All, ImageSize -> Medium]}, 
      "Specifications" :> {{$CellContext`phi$$, 1.637051507543017, 
         4.456893606736168}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{712., {256., 262.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.532884577979591*^9, 3.532884707141716*^9, {3.532884801385624*^9, 
   3.532884814110647*^9}, 3.533983322345262*^9, 3.534056753154644*^9, 
   3.534056839860424*^9, 3.5340568716622467`*^9, 3.5340570021369333`*^9, {
   3.534057148313155*^9, 3.534057198722308*^9}, {3.534061275199719*^9, 
   3.53406130746152*^9}, {3.534062849322833*^9, 3.534062862864972*^9}, 
   3.534062919523931*^9, 3.534064541888927*^9, 3.545732310526052*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1166, 756},
WindowMargins->{{Automatic, 113}, {Automatic, 62}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 87, 1, 76, "Title"],
Cell[669, 25, 102, 3, 26, "Text"],
Cell[CellGroupData[{
Cell[796, 32, 129, 2, 67, "Section"],
Cell[CellGroupData[{
Cell[950, 38, 75, 1, 34, "Subsection"],
Cell[1028, 41, 522, 14, 43, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1575, 59, 74, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[1674, 64, 314, 8, 73, "Input"],
Cell[1991, 74, 70, 1, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2122, 82, 127, 3, 34, "Subsection"],
Cell[CellGroupData[{
Cell[2274, 89, 74, 1, 24, "Subsubsection"],
Cell[2351, 92, 2491, 69, 259, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[4879, 166, 73, 1, 18, "Subsubsection"],
Cell[4955, 169, 2528, 69, 278, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[7520, 243, 98, 1, 18, "Subsubsection"],
Cell[CellGroupData[{
Cell[7643, 248, 292, 8, 30, "Input"],
Cell[7938, 258, 2546, 49, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10521, 312, 290, 8, 30, "Input"],
Cell[10814, 322, 2514, 49, 238, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13389, 378, 103, 1, 34, "Subsection"],
Cell[13495, 381, 597, 17, 88, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14141, 404, 75, 1, 37, "Section"],
Cell[CellGroupData[{
Cell[14241, 409, 93, 1, 34, "Subsection"],
Cell[14337, 412, 4688, 116, 373, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[19050, 532, 95, 1, 24, "Subsubsection"],
Cell[19148, 535, 1148, 34, 133, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[20333, 574, 98, 1, 24, "Subsubsection"],
Cell[20434, 577, 1003, 28, 103, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[21474, 610, 81, 1, 24, "Subsubsection"],
Cell[21558, 613, 4135, 115, 403, "Input",
 InitializationCell->True],
Cell[25696, 730, 818, 26, 43, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26551, 761, 149, 2, 24, "Subsubsection"],
Cell[26703, 765, 3126, 85, 202, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[29854, 854, 900, 28, 30, "Input"],
Cell[30757, 884, 2180, 46, 514, "Output"],
Cell[32940, 932, 610, 12, 100, "Message"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33611, 951, 96, 1, 34, "Subsection"],
Cell[33710, 954, 5301, 132, 525, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[39048, 1091, 111, 1, 26, "Subsection"],
Cell[39162, 1094, 759, 23, 50, "Input"],
Cell[CellGroupData[{
Cell[39946, 1121, 1169, 37, 30, "Input"],
Cell[41118, 1160, 2470, 48, 246, "Output"],
Cell[43591, 1210, 690, 13, 100, "Message"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[44342, 1230, 91, 1, 37, "Section"],
Cell[CellGroupData[{
Cell[44458, 1235, 79, 1, 34, "Subsection"],
Cell[44540, 1238, 1170, 36, 73, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[45735, 1278, 97, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[45857, 1283, 1903, 52, 193, "Input"],
Cell[47763, 1337, 2510, 53, 255, "Output"],
Cell[50276, 1392, 892, 16, 100, "Message"],
Cell[51171, 1410, 894, 16, 100, "Message"],
Cell[52068, 1428, 541, 11, 23, "Message"],
Cell[52612, 1441, 541, 11, 23, "Message"],
Cell[53156, 1454, 541, 11, 23, "Message"],
Cell[53700, 1467, 528, 11, 23, "Message"],
Cell[54231, 1480, 892, 16, 100, "Message"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[55196, 1504, 82, 1, 37, "Section"],
Cell[CellGroupData[{
Cell[55303, 1509, 287, 10, 37, "Subsection"],
Cell[55593, 1521, 7870, 208, 658, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[63500, 1734, 102, 1, 26, "Subsection"],
Cell[63605, 1737, 26365, 603, 1873, "Input",
 InitializationCell->True],
Cell[89973, 2342, 4748, 114, 478, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[94758, 2461, 95, 1, 26, "Subsection"],
Cell[94856, 2464, 181, 4, 27, "Input"],
Cell[CellGroupData[{
Cell[95062, 2472, 341, 9, 27, "Input"],
Cell[95406, 2483, 28000, 597, 1717, "Output"],
Cell[123409, 3082, 727, 13, 100, "Message"],
Cell[124139, 3097, 631, 12, 108, "Message"],
Cell[124773, 3111, 724, 13, 100, "Message"],
Cell[125500, 3126, 634, 12, 108, "Message"],
Cell[126137, 3140, 725, 13, 100, "Message"],
Cell[126865, 3155, 632, 12, 108, "Message"],
Cell[127500, 3169, 725, 13, 100, "Message"],
Cell[128228, 3184, 632, 12, 108, "Message"],
Cell[128863, 3198, 727, 13, 100, "Message"],
Cell[129593, 3213, 633, 12, 108, "Message"],
Cell[130229, 3227, 727, 13, 100, "Message"],
Cell[130959, 3242, 632, 12, 108, "Message"],
Cell[131594, 3256, 725, 13, 100, "Message"],
Cell[132322, 3271, 634, 12, 108, "Message"],
Cell[132959, 3285, 731, 13, 100, "Message"],
Cell[133693, 3300, 634, 12, 108, "Message"],
Cell[134330, 3314, 727, 13, 100, "Message"],
Cell[135060, 3329, 632, 12, 108, "Message"]
}, Closed]],
Cell[CellGroupData[{
Cell[135729, 3346, 965, 25, 112, "Input"],
Cell[136697, 3373, 150479, 2519, 439, 128191, 2152, "CachedBoxData", \
"BoxData", "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[287237, 5899, 106, 1, 37, "Section"],
Cell[CellGroupData[{
Cell[287368, 5904, 265, 10, 37, "Subsection"],
Cell[287636, 5916, 7792, 205, 451, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[295465, 6126, 127, 1, 34, "Subsection"],
Cell[295595, 6129, 19912, 438, 1678, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[315532, 6571, 227, 5, 27, "Input"],
Cell[315762, 6578, 75742, 1253, 449, 15174, 258, "CachedBoxData", "BoxData", \
"Output"]
}, Closed]],
Cell[391519, 7834, 1909, 45, 217, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[393453, 7883, 352, 6, 27, "Input"],
Cell[393808, 7891, 2347, 43, 339, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[396216, 7941, 97, 1, 37, "Section"],
Cell[CellGroupData[{
Cell[396338, 7946, 103, 1, 34, "Subsection"],
Cell[396444, 7949, 720, 22, 43, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[397201, 7976, 107, 1, 26, "Subsection"],
Cell[CellGroupData[{
Cell[397333, 7981, 5363, 127, 418, "Input"],
Cell[402699, 8110, 3881, 81, 497, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[406629, 8197, 158, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[406812, 8203, 4670, 98, 553, "Input"],
Cell[411485, 8303, 3148, 67, 535, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
